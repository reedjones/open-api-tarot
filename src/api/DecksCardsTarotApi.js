/*
 * FastAPI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {BodyEntireUpdateByPrimaryKeyCardsIdPut} from '../model/BodyEntireUpdateByPrimaryKeyCardsIdPut';
import {BodyEntireUpdateManyByQueryCardsPut} from '../model/BodyEntireUpdateManyByQueryCardsPut';
import {BodyPartialUpdateManyByQueryCardsPatch} from '../model/BodyPartialUpdateManyByQueryCardsPatch';
import {BodyPartialUpdateOneByPrimaryKeyCardsIdPatch} from '../model/BodyPartialUpdateOneByPrimaryKeyCardsIdPatch';
import {CardIdFromComparisonOperator} from '../model/CardIdFromComparisonOperator';
import {CardIdFromComparisonOperator1} from '../model/CardIdFromComparisonOperator1';
import {CardIdFromComparisonOperator2} from '../model/CardIdFromComparisonOperator2';
import {CardIdFromComparisonOperator3} from '../model/CardIdFromComparisonOperator3';
import {CardIdFromComparisonOperator4} from '../model/CardIdFromComparisonOperator4';
import {CardIdFromComparisonOperator5} from '../model/CardIdFromComparisonOperator5';
import {CardIdFromComparisonOperator6} from '../model/CardIdFromComparisonOperator6';
import {CardIdFromComparisonOperator7} from '../model/CardIdFromComparisonOperator7';
import {CardIdListComparisonOperator} from '../model/CardIdListComparisonOperator';
import {CardIdListComparisonOperator1} from '../model/CardIdListComparisonOperator1';
import {CardIdListComparisonOperator2} from '../model/CardIdListComparisonOperator2';
import {CardIdListComparisonOperator3} from '../model/CardIdListComparisonOperator3';
import {CardIdListComparisonOperator4} from '../model/CardIdListComparisonOperator4';
import {CardIdListComparisonOperator5} from '../model/CardIdListComparisonOperator5';
import {CardIdListComparisonOperator6} from '../model/CardIdListComparisonOperator6';
import {CardIdListComparisonOperator7} from '../model/CardIdListComparisonOperator7';
import {CardIdToComparisonOperator} from '../model/CardIdToComparisonOperator';
import {CardIdToComparisonOperator1} from '../model/CardIdToComparisonOperator1';
import {CardIdToComparisonOperator2} from '../model/CardIdToComparisonOperator2';
import {CardIdToComparisonOperator3} from '../model/CardIdToComparisonOperator3';
import {CardIdToComparisonOperator4} from '../model/CardIdToComparisonOperator4';
import {CardIdToComparisonOperator5} from '../model/CardIdToComparisonOperator5';
import {CardIdToComparisonOperator6} from '../model/CardIdToComparisonOperator6';
import {CardIdToComparisonOperator7} from '../model/CardIdToComparisonOperator7';
import {CreatedFromComparisonOperator10} from '../model/CreatedFromComparisonOperator10';
import {CreatedFromComparisonOperator11} from '../model/CreatedFromComparisonOperator11';
import {CreatedFromComparisonOperator12} from '../model/CreatedFromComparisonOperator12';
import {CreatedFromComparisonOperator13} from '../model/CreatedFromComparisonOperator13';
import {CreatedFromComparisonOperator14} from '../model/CreatedFromComparisonOperator14';
import {CreatedFromComparisonOperator15} from '../model/CreatedFromComparisonOperator15';
import {CreatedFromComparisonOperator8} from '../model/CreatedFromComparisonOperator8';
import {CreatedFromComparisonOperator9} from '../model/CreatedFromComparisonOperator9';
import {CreatedListComparisonOperator10} from '../model/CreatedListComparisonOperator10';
import {CreatedListComparisonOperator11} from '../model/CreatedListComparisonOperator11';
import {CreatedListComparisonOperator12} from '../model/CreatedListComparisonOperator12';
import {CreatedListComparisonOperator13} from '../model/CreatedListComparisonOperator13';
import {CreatedListComparisonOperator14} from '../model/CreatedListComparisonOperator14';
import {CreatedListComparisonOperator15} from '../model/CreatedListComparisonOperator15';
import {CreatedListComparisonOperator8} from '../model/CreatedListComparisonOperator8';
import {CreatedListComparisonOperator9} from '../model/CreatedListComparisonOperator9';
import {CreatedToComparisonOperator10} from '../model/CreatedToComparisonOperator10';
import {CreatedToComparisonOperator11} from '../model/CreatedToComparisonOperator11';
import {CreatedToComparisonOperator12} from '../model/CreatedToComparisonOperator12';
import {CreatedToComparisonOperator13} from '../model/CreatedToComparisonOperator13';
import {CreatedToComparisonOperator14} from '../model/CreatedToComparisonOperator14';
import {CreatedToComparisonOperator15} from '../model/CreatedToComparisonOperator15';
import {CreatedToComparisonOperator8} from '../model/CreatedToComparisonOperator8';
import {CreatedToComparisonOperator9} from '../model/CreatedToComparisonOperator9';
import {DeckIdFromComparisonOperator} from '../model/DeckIdFromComparisonOperator';
import {DeckIdFromComparisonOperator1} from '../model/DeckIdFromComparisonOperator1';
import {DeckIdFromComparisonOperator2} from '../model/DeckIdFromComparisonOperator2';
import {DeckIdFromComparisonOperator3} from '../model/DeckIdFromComparisonOperator3';
import {DeckIdFromComparisonOperator4} from '../model/DeckIdFromComparisonOperator4';
import {DeckIdFromComparisonOperator5} from '../model/DeckIdFromComparisonOperator5';
import {DeckIdFromComparisonOperator6} from '../model/DeckIdFromComparisonOperator6';
import {DeckIdFromComparisonOperator7} from '../model/DeckIdFromComparisonOperator7';
import {DeckIdListComparisonOperator} from '../model/DeckIdListComparisonOperator';
import {DeckIdListComparisonOperator1} from '../model/DeckIdListComparisonOperator1';
import {DeckIdListComparisonOperator2} from '../model/DeckIdListComparisonOperator2';
import {DeckIdListComparisonOperator3} from '../model/DeckIdListComparisonOperator3';
import {DeckIdListComparisonOperator4} from '../model/DeckIdListComparisonOperator4';
import {DeckIdListComparisonOperator5} from '../model/DeckIdListComparisonOperator5';
import {DeckIdListComparisonOperator6} from '../model/DeckIdListComparisonOperator6';
import {DeckIdListComparisonOperator7} from '../model/DeckIdListComparisonOperator7';
import {DeckIdToComparisonOperator} from '../model/DeckIdToComparisonOperator';
import {DeckIdToComparisonOperator1} from '../model/DeckIdToComparisonOperator1';
import {DeckIdToComparisonOperator2} from '../model/DeckIdToComparisonOperator2';
import {DeckIdToComparisonOperator3} from '../model/DeckIdToComparisonOperator3';
import {DeckIdToComparisonOperator4} from '../model/DeckIdToComparisonOperator4';
import {DeckIdToComparisonOperator5} from '../model/DeckIdToComparisonOperator5';
import {DeckIdToComparisonOperator6} from '../model/DeckIdToComparisonOperator6';
import {DeckIdToComparisonOperator7} from '../model/DeckIdToComparisonOperator7';
import {DescriptionListComparisonOperator10} from '../model/DescriptionListComparisonOperator10';
import {DescriptionListComparisonOperator11} from '../model/DescriptionListComparisonOperator11';
import {DescriptionListComparisonOperator12} from '../model/DescriptionListComparisonOperator12';
import {DescriptionListComparisonOperator13} from '../model/DescriptionListComparisonOperator13';
import {DescriptionListComparisonOperator14} from '../model/DescriptionListComparisonOperator14';
import {DescriptionListComparisonOperator15} from '../model/DescriptionListComparisonOperator15';
import {DescriptionListComparisonOperator8} from '../model/DescriptionListComparisonOperator8';
import {DescriptionListComparisonOperator9} from '../model/DescriptionListComparisonOperator9';
import {HTTPValidationError} from '../model/HTTPValidationError';
import {IdFromComparisonOperator4} from '../model/IdFromComparisonOperator4';
import {IdFromComparisonOperator5} from '../model/IdFromComparisonOperator5';
import {IdFromComparisonOperator6} from '../model/IdFromComparisonOperator6';
import {IdFromComparisonOperator7} from '../model/IdFromComparisonOperator7';
import {IdListComparisonOperator4} from '../model/IdListComparisonOperator4';
import {IdListComparisonOperator5} from '../model/IdListComparisonOperator5';
import {IdListComparisonOperator6} from '../model/IdListComparisonOperator6';
import {IdListComparisonOperator7} from '../model/IdListComparisonOperator7';
import {IdToComparisonOperator4} from '../model/IdToComparisonOperator4';
import {IdToComparisonOperator5} from '../model/IdToComparisonOperator5';
import {IdToComparisonOperator6} from '../model/IdToComparisonOperator6';
import {IdToComparisonOperator7} from '../model/IdToComparisonOperator7';
import {JsonDataListComparisonOperator} from '../model/JsonDataListComparisonOperator';
import {JsonDataListComparisonOperator1} from '../model/JsonDataListComparisonOperator1';
import {JsonDataListComparisonOperator2} from '../model/JsonDataListComparisonOperator2';
import {JsonDataListComparisonOperator3} from '../model/JsonDataListComparisonOperator3';
import {JsonDataListComparisonOperator4} from '../model/JsonDataListComparisonOperator4';
import {JsonDataListComparisonOperator5} from '../model/JsonDataListComparisonOperator5';
import {JsonDataListComparisonOperator6} from '../model/JsonDataListComparisonOperator6';
import {JsonDataListComparisonOperator7} from '../model/JsonDataListComparisonOperator7';
import {MatchingPatternInStringBase} from '../model/MatchingPatternInStringBase';
import {NameListComparisonOperator10} from '../model/NameListComparisonOperator10';
import {NameListComparisonOperator11} from '../model/NameListComparisonOperator11';
import {NameListComparisonOperator12} from '../model/NameListComparisonOperator12';
import {NameListComparisonOperator13} from '../model/NameListComparisonOperator13';
import {NameListComparisonOperator14} from '../model/NameListComparisonOperator14';
import {NameListComparisonOperator15} from '../model/NameListComparisonOperator15';
import {NameListComparisonOperator8} from '../model/NameListComparisonOperator8';
import {NameListComparisonOperator9} from '../model/NameListComparisonOperator9';
import {NumberFromComparisonOperator} from '../model/NumberFromComparisonOperator';
import {NumberFromComparisonOperator1} from '../model/NumberFromComparisonOperator1';
import {NumberFromComparisonOperator2} from '../model/NumberFromComparisonOperator2';
import {NumberFromComparisonOperator3} from '../model/NumberFromComparisonOperator3';
import {NumberFromComparisonOperator4} from '../model/NumberFromComparisonOperator4';
import {NumberFromComparisonOperator5} from '../model/NumberFromComparisonOperator5';
import {NumberFromComparisonOperator6} from '../model/NumberFromComparisonOperator6';
import {NumberFromComparisonOperator7} from '../model/NumberFromComparisonOperator7';
import {NumberListComparisonOperator} from '../model/NumberListComparisonOperator';
import {NumberListComparisonOperator1} from '../model/NumberListComparisonOperator1';
import {NumberListComparisonOperator2} from '../model/NumberListComparisonOperator2';
import {NumberListComparisonOperator3} from '../model/NumberListComparisonOperator3';
import {NumberListComparisonOperator4} from '../model/NumberListComparisonOperator4';
import {NumberListComparisonOperator5} from '../model/NumberListComparisonOperator5';
import {NumberListComparisonOperator6} from '../model/NumberListComparisonOperator6';
import {NumberListComparisonOperator7} from '../model/NumberListComparisonOperator7';
import {NumberToComparisonOperator} from '../model/NumberToComparisonOperator';
import {NumberToComparisonOperator1} from '../model/NumberToComparisonOperator1';
import {NumberToComparisonOperator2} from '../model/NumberToComparisonOperator2';
import {NumberToComparisonOperator3} from '../model/NumberToComparisonOperator3';
import {NumberToComparisonOperator4} from '../model/NumberToComparisonOperator4';
import {NumberToComparisonOperator5} from '../model/NumberToComparisonOperator5';
import {NumberToComparisonOperator6} from '../model/NumberToComparisonOperator6';
import {NumberToComparisonOperator7} from '../model/NumberToComparisonOperator7';
import {OrderFromComparisonOperator} from '../model/OrderFromComparisonOperator';
import {OrderFromComparisonOperator1} from '../model/OrderFromComparisonOperator1';
import {OrderFromComparisonOperator2} from '../model/OrderFromComparisonOperator2';
import {OrderFromComparisonOperator3} from '../model/OrderFromComparisonOperator3';
import {OrderFromComparisonOperator4} from '../model/OrderFromComparisonOperator4';
import {OrderFromComparisonOperator5} from '../model/OrderFromComparisonOperator5';
import {OrderFromComparisonOperator6} from '../model/OrderFromComparisonOperator6';
import {OrderFromComparisonOperator7} from '../model/OrderFromComparisonOperator7';
import {OrderListComparisonOperator} from '../model/OrderListComparisonOperator';
import {OrderListComparisonOperator1} from '../model/OrderListComparisonOperator1';
import {OrderListComparisonOperator2} from '../model/OrderListComparisonOperator2';
import {OrderListComparisonOperator3} from '../model/OrderListComparisonOperator3';
import {OrderListComparisonOperator4} from '../model/OrderListComparisonOperator4';
import {OrderListComparisonOperator5} from '../model/OrderListComparisonOperator5';
import {OrderListComparisonOperator6} from '../model/OrderListComparisonOperator6';
import {OrderListComparisonOperator7} from '../model/OrderListComparisonOperator7';
import {OrderToComparisonOperator} from '../model/OrderToComparisonOperator';
import {OrderToComparisonOperator1} from '../model/OrderToComparisonOperator1';
import {OrderToComparisonOperator2} from '../model/OrderToComparisonOperator2';
import {OrderToComparisonOperator3} from '../model/OrderToComparisonOperator3';
import {OrderToComparisonOperator4} from '../model/OrderToComparisonOperator4';
import {OrderToComparisonOperator5} from '../model/OrderToComparisonOperator5';
import {OrderToComparisonOperator6} from '../model/OrderToComparisonOperator6';
import {OrderToComparisonOperator7} from '../model/OrderToComparisonOperator7';
import {TarotDeckCardCreateManyItemListResponseModel} from '../model/TarotDeckCardCreateManyItemListResponseModel';
import {TarotDeckCardCreateManyItemRequestModel} from '../model/TarotDeckCardCreateManyItemRequestModel';
import {TarotDeckCardDeleteManyItemListResponseModel} from '../model/TarotDeckCardDeleteManyItemListResponseModel';
import {TarotDeckCardDeleteOneResponseModel} from '../model/TarotDeckCardDeleteOneResponseModel';
import {TarotDeckCardFindManyItemListResponseModel} from '../model/TarotDeckCardFindManyItemListResponseModel';
import {TarotDeckCardFindOneResponseModel} from '../model/TarotDeckCardFindOneResponseModel';
import {TarotDeckCardPatchManyItemListResponseModel} from '../model/TarotDeckCardPatchManyItemListResponseModel';
import {TarotDeckCardPatchOneResponseModel} from '../model/TarotDeckCardPatchOneResponseModel';
import {TarotDeckCardUpdateManyItemListResponseModel} from '../model/TarotDeckCardUpdateManyItemListResponseModel';
import {TarotDeckCardUpdateOneResponseModel} from '../model/TarotDeckCardUpdateOneResponseModel';
import {UidListComparisonOperator10} from '../model/UidListComparisonOperator10';
import {UidListComparisonOperator11} from '../model/UidListComparisonOperator11';
import {UidListComparisonOperator12} from '../model/UidListComparisonOperator12';
import {UidListComparisonOperator13} from '../model/UidListComparisonOperator13';
import {UidListComparisonOperator14} from '../model/UidListComparisonOperator14';
import {UidListComparisonOperator15} from '../model/UidListComparisonOperator15';
import {UidListComparisonOperator8} from '../model/UidListComparisonOperator8';
import {UidListComparisonOperator9} from '../model/UidListComparisonOperator9';
import {UpdatedFromComparisonOperator10} from '../model/UpdatedFromComparisonOperator10';
import {UpdatedFromComparisonOperator11} from '../model/UpdatedFromComparisonOperator11';
import {UpdatedFromComparisonOperator12} from '../model/UpdatedFromComparisonOperator12';
import {UpdatedFromComparisonOperator13} from '../model/UpdatedFromComparisonOperator13';
import {UpdatedFromComparisonOperator14} from '../model/UpdatedFromComparisonOperator14';
import {UpdatedFromComparisonOperator15} from '../model/UpdatedFromComparisonOperator15';
import {UpdatedFromComparisonOperator8} from '../model/UpdatedFromComparisonOperator8';
import {UpdatedFromComparisonOperator9} from '../model/UpdatedFromComparisonOperator9';
import {UpdatedListComparisonOperator10} from '../model/UpdatedListComparisonOperator10';
import {UpdatedListComparisonOperator11} from '../model/UpdatedListComparisonOperator11';
import {UpdatedListComparisonOperator12} from '../model/UpdatedListComparisonOperator12';
import {UpdatedListComparisonOperator13} from '../model/UpdatedListComparisonOperator13';
import {UpdatedListComparisonOperator14} from '../model/UpdatedListComparisonOperator14';
import {UpdatedListComparisonOperator15} from '../model/UpdatedListComparisonOperator15';
import {UpdatedListComparisonOperator8} from '../model/UpdatedListComparisonOperator8';
import {UpdatedListComparisonOperator9} from '../model/UpdatedListComparisonOperator9';
import {UpdatedToComparisonOperator10} from '../model/UpdatedToComparisonOperator10';
import {UpdatedToComparisonOperator11} from '../model/UpdatedToComparisonOperator11';
import {UpdatedToComparisonOperator12} from '../model/UpdatedToComparisonOperator12';
import {UpdatedToComparisonOperator13} from '../model/UpdatedToComparisonOperator13';
import {UpdatedToComparisonOperator14} from '../model/UpdatedToComparisonOperator14';
import {UpdatedToComparisonOperator15} from '../model/UpdatedToComparisonOperator15';
import {UpdatedToComparisonOperator8} from '../model/UpdatedToComparisonOperator8';
import {UpdatedToComparisonOperator9} from '../model/UpdatedToComparisonOperator9';

/**
* DecksCardsTarot service.
* @module api/DecksCardsTarotApi
* @version 0.1.0
*/
export class DecksCardsTarotApi {

    /**
    * Constructs a new DecksCardsTarotApi. 
    * @alias module:api/DecksCardsTarotApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the deleteManyByQueryCardsDelete operation.
     * @callback moduleapi/DecksCardsTarotApi~deleteManyByQueryCardsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotDeckCardDeleteManyItemListResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Many By Query
     * @param {Object} opts Optional parameters
     * @param {module:model/IdFromComparisonOperator6} opts.idFromComparisonOperator 
     * @param {module:model/IdToComparisonOperator6} opts.idToComparisonOperator 
     * @param {Number} opts.idFrom 
     * @param {Number} opts.idTo 
     * @param {module:model/IdListComparisonOperator6} opts.idListComparisonOperator 
     * @param {Array.<Number>} opts.idList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator10} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator10} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator10} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator10} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator10} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator10} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator10} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator10} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator10} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/NumberFromComparisonOperator2} opts.numberFromComparisonOperator 
     * @param {module:model/NumberToComparisonOperator2} opts.numberToComparisonOperator 
     * @param {Number} opts.numberFrom 
     * @param {Number} opts.numberTo 
     * @param {module:model/NumberListComparisonOperator2} opts.numberListComparisonOperator 
     * @param {Array.<Number>} opts.numberList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.jsonDataStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.jsonDataStr 
     * @param {module:model/JsonDataListComparisonOperator2} opts.jsonDataListComparisonOperator 
     * @param {Array.<String>} opts.jsonDataList 
     * @param {module:model/CardIdFromComparisonOperator2} opts.cardIdFromComparisonOperator 
     * @param {module:model/CardIdToComparisonOperator2} opts.cardIdToComparisonOperator 
     * @param {Number} opts.cardIdFrom 
     * @param {Number} opts.cardIdTo 
     * @param {module:model/CardIdListComparisonOperator2} opts.cardIdListComparisonOperator 
     * @param {Array.<Number>} opts.cardIdList 
     * @param {module:model/DeckIdFromComparisonOperator2} opts.deckIdFromComparisonOperator 
     * @param {module:model/DeckIdToComparisonOperator2} opts.deckIdToComparisonOperator 
     * @param {Number} opts.deckIdFrom 
     * @param {Number} opts.deckIdTo 
     * @param {module:model/DeckIdListComparisonOperator2} opts.deckIdListComparisonOperator 
     * @param {Array.<Number>} opts.deckIdList 
     * @param {module:model/OrderFromComparisonOperator2} opts.orderFromComparisonOperator 
     * @param {module:model/OrderToComparisonOperator2} opts.orderToComparisonOperator 
     * @param {Number} opts.orderFrom 
     * @param {Number} opts.orderTo 
     * @param {module:model/OrderListComparisonOperator2} opts.orderListComparisonOperator 
     * @param {Array.<Number>} opts.orderList 
     * @param {module:api/DecksCardsTarotApi~deleteManyByQueryCardsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    deleteManyByQueryCardsDelete(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'id____from_____comparison_operator': opts['idFromComparisonOperator'],'id____to_____comparison_operator': opts['idToComparisonOperator'],'id____from': opts['idFrom'],'id____to': opts['idTo'],'id____list_____comparison_operator': opts['idListComparisonOperator'],'id____list': this.apiClient.buildCollectionParam(opts['idList'], 'multi'),'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'number____from_____comparison_operator': opts['numberFromComparisonOperator'],'number____to_____comparison_operator': opts['numberToComparisonOperator'],'number____from': opts['numberFrom'],'number____to': opts['numberTo'],'number____list_____comparison_operator': opts['numberListComparisonOperator'],'number____list': this.apiClient.buildCollectionParam(opts['numberList'], 'multi'),'json_data____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['jsonDataStrMatchingPattern'], 'multi'),'json_data____str': this.apiClient.buildCollectionParam(opts['jsonDataStr'], 'multi'),'json_data____list_____comparison_operator': opts['jsonDataListComparisonOperator'],'json_data____list': this.apiClient.buildCollectionParam(opts['jsonDataList'], 'multi'),'card_id____from_____comparison_operator': opts['cardIdFromComparisonOperator'],'card_id____to_____comparison_operator': opts['cardIdToComparisonOperator'],'card_id____from': opts['cardIdFrom'],'card_id____to': opts['cardIdTo'],'card_id____list_____comparison_operator': opts['cardIdListComparisonOperator'],'card_id____list': this.apiClient.buildCollectionParam(opts['cardIdList'], 'multi'),'deck_id____from_____comparison_operator': opts['deckIdFromComparisonOperator'],'deck_id____to_____comparison_operator': opts['deckIdToComparisonOperator'],'deck_id____from': opts['deckIdFrom'],'deck_id____to': opts['deckIdTo'],'deck_id____list_____comparison_operator': opts['deckIdListComparisonOperator'],'deck_id____list': this.apiClient.buildCollectionParam(opts['deckIdList'], 'multi'),'_order____from_____comparison_operator': opts['orderFromComparisonOperator'],'_order____to_____comparison_operator': opts['orderToComparisonOperator'],'_order____from': opts['orderFrom'],'_order____to': opts['orderTo'],'_order____list_____comparison_operator': opts['orderListComparisonOperator'],'_order____list': this.apiClient.buildCollectionParam(opts['orderList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TarotDeckCardDeleteManyItemListResponseModel;

      return this.apiClient.callApi(
        '/cards', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the deleteOneByPrimaryKeyCardsIdDelete operation.
     * @callback moduleapi/DecksCardsTarotApi~deleteOneByPrimaryKeyCardsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotDeckCardDeleteOneResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete One By Primary Key
     * @param {Number} id 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator14} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator14} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator14} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator14} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator14} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator14} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator14} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator14} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator14} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/NumberFromComparisonOperator6} opts.numberFromComparisonOperator 
     * @param {module:model/NumberToComparisonOperator6} opts.numberToComparisonOperator 
     * @param {Number} opts.numberFrom 
     * @param {Number} opts.numberTo 
     * @param {module:model/NumberListComparisonOperator6} opts.numberListComparisonOperator 
     * @param {Array.<Number>} opts.numberList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.jsonDataStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.jsonDataStr 
     * @param {module:model/JsonDataListComparisonOperator6} opts.jsonDataListComparisonOperator 
     * @param {Array.<String>} opts.jsonDataList 
     * @param {module:model/CardIdFromComparisonOperator6} opts.cardIdFromComparisonOperator 
     * @param {module:model/CardIdToComparisonOperator6} opts.cardIdToComparisonOperator 
     * @param {Number} opts.cardIdFrom 
     * @param {Number} opts.cardIdTo 
     * @param {module:model/CardIdListComparisonOperator6} opts.cardIdListComparisonOperator 
     * @param {Array.<Number>} opts.cardIdList 
     * @param {module:model/DeckIdFromComparisonOperator6} opts.deckIdFromComparisonOperator 
     * @param {module:model/DeckIdToComparisonOperator6} opts.deckIdToComparisonOperator 
     * @param {Number} opts.deckIdFrom 
     * @param {Number} opts.deckIdTo 
     * @param {module:model/DeckIdListComparisonOperator6} opts.deckIdListComparisonOperator 
     * @param {Array.<Number>} opts.deckIdList 
     * @param {module:model/OrderFromComparisonOperator6} opts.orderFromComparisonOperator 
     * @param {module:model/OrderToComparisonOperator6} opts.orderToComparisonOperator 
     * @param {Number} opts.orderFrom 
     * @param {Number} opts.orderTo 
     * @param {module:model/OrderListComparisonOperator6} opts.orderListComparisonOperator 
     * @param {Array.<Number>} opts.orderList 
     * @param {module:api/DecksCardsTarotApi~deleteOneByPrimaryKeyCardsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    deleteOneByPrimaryKeyCardsIdDelete(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteOneByPrimaryKeyCardsIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'number____from_____comparison_operator': opts['numberFromComparisonOperator'],'number____to_____comparison_operator': opts['numberToComparisonOperator'],'number____from': opts['numberFrom'],'number____to': opts['numberTo'],'number____list_____comparison_operator': opts['numberListComparisonOperator'],'number____list': this.apiClient.buildCollectionParam(opts['numberList'], 'multi'),'json_data____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['jsonDataStrMatchingPattern'], 'multi'),'json_data____str': this.apiClient.buildCollectionParam(opts['jsonDataStr'], 'multi'),'json_data____list_____comparison_operator': opts['jsonDataListComparisonOperator'],'json_data____list': this.apiClient.buildCollectionParam(opts['jsonDataList'], 'multi'),'card_id____from_____comparison_operator': opts['cardIdFromComparisonOperator'],'card_id____to_____comparison_operator': opts['cardIdToComparisonOperator'],'card_id____from': opts['cardIdFrom'],'card_id____to': opts['cardIdTo'],'card_id____list_____comparison_operator': opts['cardIdListComparisonOperator'],'card_id____list': this.apiClient.buildCollectionParam(opts['cardIdList'], 'multi'),'deck_id____from_____comparison_operator': opts['deckIdFromComparisonOperator'],'deck_id____to_____comparison_operator': opts['deckIdToComparisonOperator'],'deck_id____from': opts['deckIdFrom'],'deck_id____to': opts['deckIdTo'],'deck_id____list_____comparison_operator': opts['deckIdListComparisonOperator'],'deck_id____list': this.apiClient.buildCollectionParam(opts['deckIdList'], 'multi'),'_order____from_____comparison_operator': opts['orderFromComparisonOperator'],'_order____to_____comparison_operator': opts['orderToComparisonOperator'],'_order____from': opts['orderFrom'],'_order____to': opts['orderTo'],'_order____list_____comparison_operator': opts['orderListComparisonOperator'],'_order____list': this.apiClient.buildCollectionParam(opts['orderList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TarotDeckCardDeleteOneResponseModel;

      return this.apiClient.callApi(
        '/cards/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the entireUpdateByPrimaryKeyCardsIdPut operation.
     * @callback moduleapi/DecksCardsTarotApi~entireUpdateByPrimaryKeyCardsIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotDeckCardUpdateOneResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Entire Update By Primary Key
     * @param {module:model/BodyEntireUpdateByPrimaryKeyCardsIdPut} body 
     * @param {Number} id 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator13} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator13} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator13} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator13} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator13} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator13} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator13} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator13} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator13} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/NumberFromComparisonOperator5} opts.numberFromComparisonOperator 
     * @param {module:model/NumberToComparisonOperator5} opts.numberToComparisonOperator 
     * @param {Number} opts.numberFrom 
     * @param {Number} opts.numberTo 
     * @param {module:model/NumberListComparisonOperator5} opts.numberListComparisonOperator 
     * @param {Array.<Number>} opts.numberList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.jsonDataStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.jsonDataStr 
     * @param {module:model/JsonDataListComparisonOperator5} opts.jsonDataListComparisonOperator 
     * @param {Array.<String>} opts.jsonDataList 
     * @param {module:model/CardIdFromComparisonOperator5} opts.cardIdFromComparisonOperator 
     * @param {module:model/CardIdToComparisonOperator5} opts.cardIdToComparisonOperator 
     * @param {Number} opts.cardIdFrom 
     * @param {Number} opts.cardIdTo 
     * @param {module:model/CardIdListComparisonOperator5} opts.cardIdListComparisonOperator 
     * @param {Array.<Number>} opts.cardIdList 
     * @param {module:model/DeckIdFromComparisonOperator5} opts.deckIdFromComparisonOperator 
     * @param {module:model/DeckIdToComparisonOperator5} opts.deckIdToComparisonOperator 
     * @param {Number} opts.deckIdFrom 
     * @param {Number} opts.deckIdTo 
     * @param {module:model/DeckIdListComparisonOperator5} opts.deckIdListComparisonOperator 
     * @param {Array.<Number>} opts.deckIdList 
     * @param {module:model/OrderFromComparisonOperator5} opts.orderFromComparisonOperator 
     * @param {module:model/OrderToComparisonOperator5} opts.orderToComparisonOperator 
     * @param {Number} opts.orderFrom 
     * @param {Number} opts.orderTo 
     * @param {module:model/OrderListComparisonOperator5} opts.orderListComparisonOperator 
     * @param {Array.<Number>} opts.orderList 
     * @param {module:api/DecksCardsTarotApi~entireUpdateByPrimaryKeyCardsIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    entireUpdateByPrimaryKeyCardsIdPut(body, id, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling entireUpdateByPrimaryKeyCardsIdPut");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling entireUpdateByPrimaryKeyCardsIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'number____from_____comparison_operator': opts['numberFromComparisonOperator'],'number____to_____comparison_operator': opts['numberToComparisonOperator'],'number____from': opts['numberFrom'],'number____to': opts['numberTo'],'number____list_____comparison_operator': opts['numberListComparisonOperator'],'number____list': this.apiClient.buildCollectionParam(opts['numberList'], 'multi'),'json_data____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['jsonDataStrMatchingPattern'], 'multi'),'json_data____str': this.apiClient.buildCollectionParam(opts['jsonDataStr'], 'multi'),'json_data____list_____comparison_operator': opts['jsonDataListComparisonOperator'],'json_data____list': this.apiClient.buildCollectionParam(opts['jsonDataList'], 'multi'),'card_id____from_____comparison_operator': opts['cardIdFromComparisonOperator'],'card_id____to_____comparison_operator': opts['cardIdToComparisonOperator'],'card_id____from': opts['cardIdFrom'],'card_id____to': opts['cardIdTo'],'card_id____list_____comparison_operator': opts['cardIdListComparisonOperator'],'card_id____list': this.apiClient.buildCollectionParam(opts['cardIdList'], 'multi'),'deck_id____from_____comparison_operator': opts['deckIdFromComparisonOperator'],'deck_id____to_____comparison_operator': opts['deckIdToComparisonOperator'],'deck_id____from': opts['deckIdFrom'],'deck_id____to': opts['deckIdTo'],'deck_id____list_____comparison_operator': opts['deckIdListComparisonOperator'],'deck_id____list': this.apiClient.buildCollectionParam(opts['deckIdList'], 'multi'),'_order____from_____comparison_operator': opts['orderFromComparisonOperator'],'_order____to_____comparison_operator': opts['orderToComparisonOperator'],'_order____from': opts['orderFrom'],'_order____to': opts['orderTo'],'_order____list_____comparison_operator': opts['orderListComparisonOperator'],'_order____list': this.apiClient.buildCollectionParam(opts['orderList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TarotDeckCardUpdateOneResponseModel;

      return this.apiClient.callApi(
        '/cards/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the entireUpdateManyByQueryCardsPut operation.
     * @callback moduleapi/DecksCardsTarotApi~entireUpdateManyByQueryCardsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotDeckCardUpdateManyItemListResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Entire Update Many By Query
     * @param {module:model/BodyEntireUpdateManyByQueryCardsPut} body 
     * @param {Object} opts Optional parameters
     * @param {module:model/IdFromComparisonOperator5} opts.idFromComparisonOperator 
     * @param {module:model/IdToComparisonOperator5} opts.idToComparisonOperator 
     * @param {Number} opts.idFrom 
     * @param {Number} opts.idTo 
     * @param {module:model/IdListComparisonOperator5} opts.idListComparisonOperator 
     * @param {Array.<Number>} opts.idList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator9} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator9} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator9} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator9} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator9} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator9} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator9} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator9} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator9} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/NumberFromComparisonOperator1} opts.numberFromComparisonOperator 
     * @param {module:model/NumberToComparisonOperator1} opts.numberToComparisonOperator 
     * @param {Number} opts.numberFrom 
     * @param {Number} opts.numberTo 
     * @param {module:model/NumberListComparisonOperator1} opts.numberListComparisonOperator 
     * @param {Array.<Number>} opts.numberList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.jsonDataStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.jsonDataStr 
     * @param {module:model/JsonDataListComparisonOperator1} opts.jsonDataListComparisonOperator 
     * @param {Array.<String>} opts.jsonDataList 
     * @param {module:model/CardIdFromComparisonOperator1} opts.cardIdFromComparisonOperator 
     * @param {module:model/CardIdToComparisonOperator1} opts.cardIdToComparisonOperator 
     * @param {Number} opts.cardIdFrom 
     * @param {Number} opts.cardIdTo 
     * @param {module:model/CardIdListComparisonOperator1} opts.cardIdListComparisonOperator 
     * @param {Array.<Number>} opts.cardIdList 
     * @param {module:model/DeckIdFromComparisonOperator1} opts.deckIdFromComparisonOperator 
     * @param {module:model/DeckIdToComparisonOperator1} opts.deckIdToComparisonOperator 
     * @param {Number} opts.deckIdFrom 
     * @param {Number} opts.deckIdTo 
     * @param {module:model/DeckIdListComparisonOperator1} opts.deckIdListComparisonOperator 
     * @param {Array.<Number>} opts.deckIdList 
     * @param {module:model/OrderFromComparisonOperator1} opts.orderFromComparisonOperator 
     * @param {module:model/OrderToComparisonOperator1} opts.orderToComparisonOperator 
     * @param {Number} opts.orderFrom 
     * @param {Number} opts.orderTo 
     * @param {module:model/OrderListComparisonOperator1} opts.orderListComparisonOperator 
     * @param {Array.<Number>} opts.orderList 
     * @param {module:api/DecksCardsTarotApi~entireUpdateManyByQueryCardsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    entireUpdateManyByQueryCardsPut(body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling entireUpdateManyByQueryCardsPut");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'id____from_____comparison_operator': opts['idFromComparisonOperator'],'id____to_____comparison_operator': opts['idToComparisonOperator'],'id____from': opts['idFrom'],'id____to': opts['idTo'],'id____list_____comparison_operator': opts['idListComparisonOperator'],'id____list': this.apiClient.buildCollectionParam(opts['idList'], 'multi'),'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'number____from_____comparison_operator': opts['numberFromComparisonOperator'],'number____to_____comparison_operator': opts['numberToComparisonOperator'],'number____from': opts['numberFrom'],'number____to': opts['numberTo'],'number____list_____comparison_operator': opts['numberListComparisonOperator'],'number____list': this.apiClient.buildCollectionParam(opts['numberList'], 'multi'),'json_data____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['jsonDataStrMatchingPattern'], 'multi'),'json_data____str': this.apiClient.buildCollectionParam(opts['jsonDataStr'], 'multi'),'json_data____list_____comparison_operator': opts['jsonDataListComparisonOperator'],'json_data____list': this.apiClient.buildCollectionParam(opts['jsonDataList'], 'multi'),'card_id____from_____comparison_operator': opts['cardIdFromComparisonOperator'],'card_id____to_____comparison_operator': opts['cardIdToComparisonOperator'],'card_id____from': opts['cardIdFrom'],'card_id____to': opts['cardIdTo'],'card_id____list_____comparison_operator': opts['cardIdListComparisonOperator'],'card_id____list': this.apiClient.buildCollectionParam(opts['cardIdList'], 'multi'),'deck_id____from_____comparison_operator': opts['deckIdFromComparisonOperator'],'deck_id____to_____comparison_operator': opts['deckIdToComparisonOperator'],'deck_id____from': opts['deckIdFrom'],'deck_id____to': opts['deckIdTo'],'deck_id____list_____comparison_operator': opts['deckIdListComparisonOperator'],'deck_id____list': this.apiClient.buildCollectionParam(opts['deckIdList'], 'multi'),'_order____from_____comparison_operator': opts['orderFromComparisonOperator'],'_order____to_____comparison_operator': opts['orderToComparisonOperator'],'_order____from': opts['orderFrom'],'_order____to': opts['orderTo'],'_order____list_____comparison_operator': opts['orderListComparisonOperator'],'_order____list': this.apiClient.buildCollectionParam(opts['orderList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TarotDeckCardUpdateManyItemListResponseModel;

      return this.apiClient.callApi(
        '/cards', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getManyCardsGet operation.
     * @callback moduleapi/DecksCardsTarotApi~getManyCardsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotDeckCardFindManyItemListResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Many
     * @param {Object} opts Optional parameters
     * @param {module:model/IdFromComparisonOperator4} opts.idFromComparisonOperator 
     * @param {module:model/IdToComparisonOperator4} opts.idToComparisonOperator 
     * @param {Number} opts.idFrom 
     * @param {Number} opts.idTo 
     * @param {module:model/IdListComparisonOperator4} opts.idListComparisonOperator 
     * @param {Array.<Number>} opts.idList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator8} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator8} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator8} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator8} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator8} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator8} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator8} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator8} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator8} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/NumberFromComparisonOperator} opts.numberFromComparisonOperator 
     * @param {module:model/NumberToComparisonOperator} opts.numberToComparisonOperator 
     * @param {Number} opts.numberFrom 
     * @param {Number} opts.numberTo 
     * @param {module:model/NumberListComparisonOperator} opts.numberListComparisonOperator 
     * @param {Array.<Number>} opts.numberList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.jsonDataStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.jsonDataStr 
     * @param {module:model/JsonDataListComparisonOperator} opts.jsonDataListComparisonOperator 
     * @param {Array.<String>} opts.jsonDataList 
     * @param {module:model/CardIdFromComparisonOperator} opts.cardIdFromComparisonOperator 
     * @param {module:model/CardIdToComparisonOperator} opts.cardIdToComparisonOperator 
     * @param {Number} opts.cardIdFrom 
     * @param {Number} opts.cardIdTo 
     * @param {module:model/CardIdListComparisonOperator} opts.cardIdListComparisonOperator 
     * @param {Array.<Number>} opts.cardIdList 
     * @param {module:model/DeckIdFromComparisonOperator} opts.deckIdFromComparisonOperator 
     * @param {module:model/DeckIdToComparisonOperator} opts.deckIdToComparisonOperator 
     * @param {Number} opts.deckIdFrom 
     * @param {Number} opts.deckIdTo 
     * @param {module:model/DeckIdListComparisonOperator} opts.deckIdListComparisonOperator 
     * @param {Array.<Number>} opts.deckIdList 
     * @param {module:model/OrderFromComparisonOperator} opts.orderFromComparisonOperator 
     * @param {module:model/OrderToComparisonOperator} opts.orderToComparisonOperator 
     * @param {Number} opts.orderFrom 
     * @param {Number} opts.orderTo 
     * @param {module:model/OrderListComparisonOperator} opts.orderListComparisonOperator 
     * @param {Array.<Number>} opts.orderList 
     * @param {Number} opts.limit 
     * @param {Number} opts.offset 
     * @param {Array.<String>} opts.orderByColumns &lt;br&gt; support column:              &lt;br&gt; [&#x27;id&#x27;, &#x27;uid&#x27;, &#x27;name&#x27;, &#x27;description&#x27;, &#x27;created&#x27;, &#x27;updated&#x27;, &#x27;number&#x27;, &#x27;json_data&#x27;, &#x27;card_id&#x27;, &#x27;deck_id&#x27;, &#x27;_order&#x27;] &lt;hr&gt;&lt;br&gt; support ordering:               &lt;br&gt; [&#x27;DESC&#x27;, &#x27;ASC&#x27;]              &lt;hr&gt;              &lt;br/&gt;example:              &lt;br/&gt;&amp;emsp;&amp;emsp;any name of column:ASC             &lt;br/&gt;&amp;emsp;&amp;emsp;any name of column: DESC              &lt;br/&gt;&amp;emsp;&amp;emsp;any name of column    :    DESC             &lt;br/&gt;&amp;emsp;&amp;emsp;any name of column (default sort by ASC)
     * @param {module:api/DecksCardsTarotApi~getManyCardsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getManyCardsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'id____from_____comparison_operator': opts['idFromComparisonOperator'],'id____to_____comparison_operator': opts['idToComparisonOperator'],'id____from': opts['idFrom'],'id____to': opts['idTo'],'id____list_____comparison_operator': opts['idListComparisonOperator'],'id____list': this.apiClient.buildCollectionParam(opts['idList'], 'multi'),'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'number____from_____comparison_operator': opts['numberFromComparisonOperator'],'number____to_____comparison_operator': opts['numberToComparisonOperator'],'number____from': opts['numberFrom'],'number____to': opts['numberTo'],'number____list_____comparison_operator': opts['numberListComparisonOperator'],'number____list': this.apiClient.buildCollectionParam(opts['numberList'], 'multi'),'json_data____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['jsonDataStrMatchingPattern'], 'multi'),'json_data____str': this.apiClient.buildCollectionParam(opts['jsonDataStr'], 'multi'),'json_data____list_____comparison_operator': opts['jsonDataListComparisonOperator'],'json_data____list': this.apiClient.buildCollectionParam(opts['jsonDataList'], 'multi'),'card_id____from_____comparison_operator': opts['cardIdFromComparisonOperator'],'card_id____to_____comparison_operator': opts['cardIdToComparisonOperator'],'card_id____from': opts['cardIdFrom'],'card_id____to': opts['cardIdTo'],'card_id____list_____comparison_operator': opts['cardIdListComparisonOperator'],'card_id____list': this.apiClient.buildCollectionParam(opts['cardIdList'], 'multi'),'deck_id____from_____comparison_operator': opts['deckIdFromComparisonOperator'],'deck_id____to_____comparison_operator': opts['deckIdToComparisonOperator'],'deck_id____from': opts['deckIdFrom'],'deck_id____to': opts['deckIdTo'],'deck_id____list_____comparison_operator': opts['deckIdListComparisonOperator'],'deck_id____list': this.apiClient.buildCollectionParam(opts['deckIdList'], 'multi'),'_order____from_____comparison_operator': opts['orderFromComparisonOperator'],'_order____to_____comparison_operator': opts['orderToComparisonOperator'],'_order____from': opts['orderFrom'],'_order____to': opts['orderTo'],'_order____list_____comparison_operator': opts['orderListComparisonOperator'],'_order____list': this.apiClient.buildCollectionParam(opts['orderList'], 'multi'),'limit': opts['limit'],'offset': opts['offset'],'order_by_columns': this.apiClient.buildCollectionParam(opts['orderByColumns'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TarotDeckCardFindManyItemListResponseModel;

      return this.apiClient.callApi(
        '/cards', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getOneByPrimaryKeyCardsIdGet operation.
     * @callback moduleapi/DecksCardsTarotApi~getOneByPrimaryKeyCardsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotDeckCardFindOneResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get One By Primary Key
     * @param {Number} id 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator12} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator12} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator12} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator12} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator12} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator12} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator12} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator12} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator12} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/NumberFromComparisonOperator4} opts.numberFromComparisonOperator 
     * @param {module:model/NumberToComparisonOperator4} opts.numberToComparisonOperator 
     * @param {Number} opts.numberFrom 
     * @param {Number} opts.numberTo 
     * @param {module:model/NumberListComparisonOperator4} opts.numberListComparisonOperator 
     * @param {Array.<Number>} opts.numberList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.jsonDataStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.jsonDataStr 
     * @param {module:model/JsonDataListComparisonOperator4} opts.jsonDataListComparisonOperator 
     * @param {Array.<String>} opts.jsonDataList 
     * @param {module:model/CardIdFromComparisonOperator4} opts.cardIdFromComparisonOperator 
     * @param {module:model/CardIdToComparisonOperator4} opts.cardIdToComparisonOperator 
     * @param {Number} opts.cardIdFrom 
     * @param {Number} opts.cardIdTo 
     * @param {module:model/CardIdListComparisonOperator4} opts.cardIdListComparisonOperator 
     * @param {Array.<Number>} opts.cardIdList 
     * @param {module:model/DeckIdFromComparisonOperator4} opts.deckIdFromComparisonOperator 
     * @param {module:model/DeckIdToComparisonOperator4} opts.deckIdToComparisonOperator 
     * @param {Number} opts.deckIdFrom 
     * @param {Number} opts.deckIdTo 
     * @param {module:model/DeckIdListComparisonOperator4} opts.deckIdListComparisonOperator 
     * @param {Array.<Number>} opts.deckIdList 
     * @param {module:model/OrderFromComparisonOperator4} opts.orderFromComparisonOperator 
     * @param {module:model/OrderToComparisonOperator4} opts.orderToComparisonOperator 
     * @param {Number} opts.orderFrom 
     * @param {Number} opts.orderTo 
     * @param {module:model/OrderListComparisonOperator4} opts.orderListComparisonOperator 
     * @param {Array.<Number>} opts.orderList 
     * @param {module:api/DecksCardsTarotApi~getOneByPrimaryKeyCardsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getOneByPrimaryKeyCardsIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getOneByPrimaryKeyCardsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'number____from_____comparison_operator': opts['numberFromComparisonOperator'],'number____to_____comparison_operator': opts['numberToComparisonOperator'],'number____from': opts['numberFrom'],'number____to': opts['numberTo'],'number____list_____comparison_operator': opts['numberListComparisonOperator'],'number____list': this.apiClient.buildCollectionParam(opts['numberList'], 'multi'),'json_data____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['jsonDataStrMatchingPattern'], 'multi'),'json_data____str': this.apiClient.buildCollectionParam(opts['jsonDataStr'], 'multi'),'json_data____list_____comparison_operator': opts['jsonDataListComparisonOperator'],'json_data____list': this.apiClient.buildCollectionParam(opts['jsonDataList'], 'multi'),'card_id____from_____comparison_operator': opts['cardIdFromComparisonOperator'],'card_id____to_____comparison_operator': opts['cardIdToComparisonOperator'],'card_id____from': opts['cardIdFrom'],'card_id____to': opts['cardIdTo'],'card_id____list_____comparison_operator': opts['cardIdListComparisonOperator'],'card_id____list': this.apiClient.buildCollectionParam(opts['cardIdList'], 'multi'),'deck_id____from_____comparison_operator': opts['deckIdFromComparisonOperator'],'deck_id____to_____comparison_operator': opts['deckIdToComparisonOperator'],'deck_id____from': opts['deckIdFrom'],'deck_id____to': opts['deckIdTo'],'deck_id____list_____comparison_operator': opts['deckIdListComparisonOperator'],'deck_id____list': this.apiClient.buildCollectionParam(opts['deckIdList'], 'multi'),'_order____from_____comparison_operator': opts['orderFromComparisonOperator'],'_order____to_____comparison_operator': opts['orderToComparisonOperator'],'_order____from': opts['orderFrom'],'_order____to': opts['orderTo'],'_order____list_____comparison_operator': opts['orderListComparisonOperator'],'_order____list': this.apiClient.buildCollectionParam(opts['orderList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TarotDeckCardFindOneResponseModel;

      return this.apiClient.callApi(
        '/cards/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the insertManyCardsPost operation.
     * @callback moduleapi/DecksCardsTarotApi~insertManyCardsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotDeckCardCreateManyItemListResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Insert Many
     * @param {Array.<module:model/TarotDeckCardCreateManyItemRequestModel>} body 
     * @param {module:api/DecksCardsTarotApi~insertManyCardsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    insertManyCardsPost(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling insertManyCardsPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TarotDeckCardCreateManyItemListResponseModel;

      return this.apiClient.callApi(
        '/cards', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the partialUpdateManyByQueryCardsPatch operation.
     * @callback moduleapi/DecksCardsTarotApi~partialUpdateManyByQueryCardsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotDeckCardPatchManyItemListResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Partial Update Many By Query
     * @param {Object} opts Optional parameters
     * @param {module:model/BodyPartialUpdateManyByQueryCardsPatch} opts.body 
     * @param {module:model/IdFromComparisonOperator7} opts.idFromComparisonOperator 
     * @param {module:model/IdToComparisonOperator7} opts.idToComparisonOperator 
     * @param {Number} opts.idFrom 
     * @param {Number} opts.idTo 
     * @param {module:model/IdListComparisonOperator7} opts.idListComparisonOperator 
     * @param {Array.<Number>} opts.idList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator11} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator11} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator11} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator11} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator11} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator11} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator11} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator11} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator11} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/NumberFromComparisonOperator3} opts.numberFromComparisonOperator 
     * @param {module:model/NumberToComparisonOperator3} opts.numberToComparisonOperator 
     * @param {Number} opts.numberFrom 
     * @param {Number} opts.numberTo 
     * @param {module:model/NumberListComparisonOperator3} opts.numberListComparisonOperator 
     * @param {Array.<Number>} opts.numberList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.jsonDataStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.jsonDataStr 
     * @param {module:model/JsonDataListComparisonOperator3} opts.jsonDataListComparisonOperator 
     * @param {Array.<String>} opts.jsonDataList 
     * @param {module:model/CardIdFromComparisonOperator3} opts.cardIdFromComparisonOperator 
     * @param {module:model/CardIdToComparisonOperator3} opts.cardIdToComparisonOperator 
     * @param {Number} opts.cardIdFrom 
     * @param {Number} opts.cardIdTo 
     * @param {module:model/CardIdListComparisonOperator3} opts.cardIdListComparisonOperator 
     * @param {Array.<Number>} opts.cardIdList 
     * @param {module:model/DeckIdFromComparisonOperator3} opts.deckIdFromComparisonOperator 
     * @param {module:model/DeckIdToComparisonOperator3} opts.deckIdToComparisonOperator 
     * @param {Number} opts.deckIdFrom 
     * @param {Number} opts.deckIdTo 
     * @param {module:model/DeckIdListComparisonOperator3} opts.deckIdListComparisonOperator 
     * @param {Array.<Number>} opts.deckIdList 
     * @param {module:model/OrderFromComparisonOperator3} opts.orderFromComparisonOperator 
     * @param {module:model/OrderToComparisonOperator3} opts.orderToComparisonOperator 
     * @param {Number} opts.orderFrom 
     * @param {Number} opts.orderTo 
     * @param {module:model/OrderListComparisonOperator3} opts.orderListComparisonOperator 
     * @param {Array.<Number>} opts.orderList 
     * @param {module:api/DecksCardsTarotApi~partialUpdateManyByQueryCardsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    partialUpdateManyByQueryCardsPatch(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        'id____from_____comparison_operator': opts['idFromComparisonOperator'],'id____to_____comparison_operator': opts['idToComparisonOperator'],'id____from': opts['idFrom'],'id____to': opts['idTo'],'id____list_____comparison_operator': opts['idListComparisonOperator'],'id____list': this.apiClient.buildCollectionParam(opts['idList'], 'multi'),'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'number____from_____comparison_operator': opts['numberFromComparisonOperator'],'number____to_____comparison_operator': opts['numberToComparisonOperator'],'number____from': opts['numberFrom'],'number____to': opts['numberTo'],'number____list_____comparison_operator': opts['numberListComparisonOperator'],'number____list': this.apiClient.buildCollectionParam(opts['numberList'], 'multi'),'json_data____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['jsonDataStrMatchingPattern'], 'multi'),'json_data____str': this.apiClient.buildCollectionParam(opts['jsonDataStr'], 'multi'),'json_data____list_____comparison_operator': opts['jsonDataListComparisonOperator'],'json_data____list': this.apiClient.buildCollectionParam(opts['jsonDataList'], 'multi'),'card_id____from_____comparison_operator': opts['cardIdFromComparisonOperator'],'card_id____to_____comparison_operator': opts['cardIdToComparisonOperator'],'card_id____from': opts['cardIdFrom'],'card_id____to': opts['cardIdTo'],'card_id____list_____comparison_operator': opts['cardIdListComparisonOperator'],'card_id____list': this.apiClient.buildCollectionParam(opts['cardIdList'], 'multi'),'deck_id____from_____comparison_operator': opts['deckIdFromComparisonOperator'],'deck_id____to_____comparison_operator': opts['deckIdToComparisonOperator'],'deck_id____from': opts['deckIdFrom'],'deck_id____to': opts['deckIdTo'],'deck_id____list_____comparison_operator': opts['deckIdListComparisonOperator'],'deck_id____list': this.apiClient.buildCollectionParam(opts['deckIdList'], 'multi'),'_order____from_____comparison_operator': opts['orderFromComparisonOperator'],'_order____to_____comparison_operator': opts['orderToComparisonOperator'],'_order____from': opts['orderFrom'],'_order____to': opts['orderTo'],'_order____list_____comparison_operator': opts['orderListComparisonOperator'],'_order____list': this.apiClient.buildCollectionParam(opts['orderList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TarotDeckCardPatchManyItemListResponseModel;

      return this.apiClient.callApi(
        '/cards', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the partialUpdateOneByPrimaryKeyCardsIdPatch operation.
     * @callback moduleapi/DecksCardsTarotApi~partialUpdateOneByPrimaryKeyCardsIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotDeckCardPatchOneResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Partial Update One By Primary Key
     * @param {Number} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/BodyPartialUpdateOneByPrimaryKeyCardsIdPatch} opts.body 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator15} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator15} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator15} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator15} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator15} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator15} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator15} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator15} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator15} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/NumberFromComparisonOperator7} opts.numberFromComparisonOperator 
     * @param {module:model/NumberToComparisonOperator7} opts.numberToComparisonOperator 
     * @param {Number} opts.numberFrom 
     * @param {Number} opts.numberTo 
     * @param {module:model/NumberListComparisonOperator7} opts.numberListComparisonOperator 
     * @param {Array.<Number>} opts.numberList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.jsonDataStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.jsonDataStr 
     * @param {module:model/JsonDataListComparisonOperator7} opts.jsonDataListComparisonOperator 
     * @param {Array.<String>} opts.jsonDataList 
     * @param {module:model/CardIdFromComparisonOperator7} opts.cardIdFromComparisonOperator 
     * @param {module:model/CardIdToComparisonOperator7} opts.cardIdToComparisonOperator 
     * @param {Number} opts.cardIdFrom 
     * @param {Number} opts.cardIdTo 
     * @param {module:model/CardIdListComparisonOperator7} opts.cardIdListComparisonOperator 
     * @param {Array.<Number>} opts.cardIdList 
     * @param {module:model/DeckIdFromComparisonOperator7} opts.deckIdFromComparisonOperator 
     * @param {module:model/DeckIdToComparisonOperator7} opts.deckIdToComparisonOperator 
     * @param {Number} opts.deckIdFrom 
     * @param {Number} opts.deckIdTo 
     * @param {module:model/DeckIdListComparisonOperator7} opts.deckIdListComparisonOperator 
     * @param {Array.<Number>} opts.deckIdList 
     * @param {module:model/OrderFromComparisonOperator7} opts.orderFromComparisonOperator 
     * @param {module:model/OrderToComparisonOperator7} opts.orderToComparisonOperator 
     * @param {Number} opts.orderFrom 
     * @param {Number} opts.orderTo 
     * @param {module:model/OrderListComparisonOperator7} opts.orderListComparisonOperator 
     * @param {Array.<Number>} opts.orderList 
     * @param {module:api/DecksCardsTarotApi~partialUpdateOneByPrimaryKeyCardsIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    partialUpdateOneByPrimaryKeyCardsIdPatch(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling partialUpdateOneByPrimaryKeyCardsIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'number____from_____comparison_operator': opts['numberFromComparisonOperator'],'number____to_____comparison_operator': opts['numberToComparisonOperator'],'number____from': opts['numberFrom'],'number____to': opts['numberTo'],'number____list_____comparison_operator': opts['numberListComparisonOperator'],'number____list': this.apiClient.buildCollectionParam(opts['numberList'], 'multi'),'json_data____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['jsonDataStrMatchingPattern'], 'multi'),'json_data____str': this.apiClient.buildCollectionParam(opts['jsonDataStr'], 'multi'),'json_data____list_____comparison_operator': opts['jsonDataListComparisonOperator'],'json_data____list': this.apiClient.buildCollectionParam(opts['jsonDataList'], 'multi'),'card_id____from_____comparison_operator': opts['cardIdFromComparisonOperator'],'card_id____to_____comparison_operator': opts['cardIdToComparisonOperator'],'card_id____from': opts['cardIdFrom'],'card_id____to': opts['cardIdTo'],'card_id____list_____comparison_operator': opts['cardIdListComparisonOperator'],'card_id____list': this.apiClient.buildCollectionParam(opts['cardIdList'], 'multi'),'deck_id____from_____comparison_operator': opts['deckIdFromComparisonOperator'],'deck_id____to_____comparison_operator': opts['deckIdToComparisonOperator'],'deck_id____from': opts['deckIdFrom'],'deck_id____to': opts['deckIdTo'],'deck_id____list_____comparison_operator': opts['deckIdListComparisonOperator'],'deck_id____list': this.apiClient.buildCollectionParam(opts['deckIdList'], 'multi'),'_order____from_____comparison_operator': opts['orderFromComparisonOperator'],'_order____to_____comparison_operator': opts['orderToComparisonOperator'],'_order____from': opts['orderFrom'],'_order____to': opts['orderTo'],'_order____list_____comparison_operator': opts['orderListComparisonOperator'],'_order____list': this.apiClient.buildCollectionParam(opts['orderList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TarotDeckCardPatchOneResponseModel;

      return this.apiClient.callApi(
        '/cards/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}