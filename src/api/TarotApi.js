/*
 * FastAPI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {BodyEntireUpdateByPrimaryKeySpreadsIdPut} from '../model/BodyEntireUpdateByPrimaryKeySpreadsIdPut';
import {BodyEntireUpdateManyByQuerySpreadsPut} from '../model/BodyEntireUpdateManyByQuerySpreadsPut';
import {BodyPartialUpdateManyByQuerySpreadsPatch} from '../model/BodyPartialUpdateManyByQuerySpreadsPatch';
import {BodyPartialUpdateOneByPrimaryKeySpreadsIdPatch} from '../model/BodyPartialUpdateOneByPrimaryKeySpreadsIdPatch';
import {CardsCountFromComparisonOperator} from '../model/CardsCountFromComparisonOperator';
import {CardsCountFromComparisonOperator1} from '../model/CardsCountFromComparisonOperator1';
import {CardsCountFromComparisonOperator2} from '../model/CardsCountFromComparisonOperator2';
import {CardsCountFromComparisonOperator3} from '../model/CardsCountFromComparisonOperator3';
import {CardsCountFromComparisonOperator4} from '../model/CardsCountFromComparisonOperator4';
import {CardsCountFromComparisonOperator5} from '../model/CardsCountFromComparisonOperator5';
import {CardsCountFromComparisonOperator6} from '../model/CardsCountFromComparisonOperator6';
import {CardsCountFromComparisonOperator7} from '../model/CardsCountFromComparisonOperator7';
import {CardsCountListComparisonOperator} from '../model/CardsCountListComparisonOperator';
import {CardsCountListComparisonOperator1} from '../model/CardsCountListComparisonOperator1';
import {CardsCountListComparisonOperator2} from '../model/CardsCountListComparisonOperator2';
import {CardsCountListComparisonOperator3} from '../model/CardsCountListComparisonOperator3';
import {CardsCountListComparisonOperator4} from '../model/CardsCountListComparisonOperator4';
import {CardsCountListComparisonOperator5} from '../model/CardsCountListComparisonOperator5';
import {CardsCountListComparisonOperator6} from '../model/CardsCountListComparisonOperator6';
import {CardsCountListComparisonOperator7} from '../model/CardsCountListComparisonOperator7';
import {CardsCountToComparisonOperator} from '../model/CardsCountToComparisonOperator';
import {CardsCountToComparisonOperator1} from '../model/CardsCountToComparisonOperator1';
import {CardsCountToComparisonOperator2} from '../model/CardsCountToComparisonOperator2';
import {CardsCountToComparisonOperator3} from '../model/CardsCountToComparisonOperator3';
import {CardsCountToComparisonOperator4} from '../model/CardsCountToComparisonOperator4';
import {CardsCountToComparisonOperator5} from '../model/CardsCountToComparisonOperator5';
import {CardsCountToComparisonOperator6} from '../model/CardsCountToComparisonOperator6';
import {CardsCountToComparisonOperator7} from '../model/CardsCountToComparisonOperator7';
import {CreatedFromComparisonOperator16} from '../model/CreatedFromComparisonOperator16';
import {CreatedFromComparisonOperator17} from '../model/CreatedFromComparisonOperator17';
import {CreatedFromComparisonOperator18} from '../model/CreatedFromComparisonOperator18';
import {CreatedFromComparisonOperator19} from '../model/CreatedFromComparisonOperator19';
import {CreatedFromComparisonOperator20} from '../model/CreatedFromComparisonOperator20';
import {CreatedFromComparisonOperator21} from '../model/CreatedFromComparisonOperator21';
import {CreatedFromComparisonOperator22} from '../model/CreatedFromComparisonOperator22';
import {CreatedFromComparisonOperator23} from '../model/CreatedFromComparisonOperator23';
import {CreatedListComparisonOperator16} from '../model/CreatedListComparisonOperator16';
import {CreatedListComparisonOperator17} from '../model/CreatedListComparisonOperator17';
import {CreatedListComparisonOperator18} from '../model/CreatedListComparisonOperator18';
import {CreatedListComparisonOperator19} from '../model/CreatedListComparisonOperator19';
import {CreatedListComparisonOperator20} from '../model/CreatedListComparisonOperator20';
import {CreatedListComparisonOperator21} from '../model/CreatedListComparisonOperator21';
import {CreatedListComparisonOperator22} from '../model/CreatedListComparisonOperator22';
import {CreatedListComparisonOperator23} from '../model/CreatedListComparisonOperator23';
import {CreatedToComparisonOperator16} from '../model/CreatedToComparisonOperator16';
import {CreatedToComparisonOperator17} from '../model/CreatedToComparisonOperator17';
import {CreatedToComparisonOperator18} from '../model/CreatedToComparisonOperator18';
import {CreatedToComparisonOperator19} from '../model/CreatedToComparisonOperator19';
import {CreatedToComparisonOperator20} from '../model/CreatedToComparisonOperator20';
import {CreatedToComparisonOperator21} from '../model/CreatedToComparisonOperator21';
import {CreatedToComparisonOperator22} from '../model/CreatedToComparisonOperator22';
import {CreatedToComparisonOperator23} from '../model/CreatedToComparisonOperator23';
import {DescriptionListComparisonOperator16} from '../model/DescriptionListComparisonOperator16';
import {DescriptionListComparisonOperator17} from '../model/DescriptionListComparisonOperator17';
import {DescriptionListComparisonOperator18} from '../model/DescriptionListComparisonOperator18';
import {DescriptionListComparisonOperator19} from '../model/DescriptionListComparisonOperator19';
import {DescriptionListComparisonOperator20} from '../model/DescriptionListComparisonOperator20';
import {DescriptionListComparisonOperator21} from '../model/DescriptionListComparisonOperator21';
import {DescriptionListComparisonOperator22} from '../model/DescriptionListComparisonOperator22';
import {DescriptionListComparisonOperator23} from '../model/DescriptionListComparisonOperator23';
import {HTTPValidationError} from '../model/HTTPValidationError';
import {IdFromComparisonOperator10} from '../model/IdFromComparisonOperator10';
import {IdFromComparisonOperator11} from '../model/IdFromComparisonOperator11';
import {IdFromComparisonOperator8} from '../model/IdFromComparisonOperator8';
import {IdFromComparisonOperator9} from '../model/IdFromComparisonOperator9';
import {IdListComparisonOperator10} from '../model/IdListComparisonOperator10';
import {IdListComparisonOperator11} from '../model/IdListComparisonOperator11';
import {IdListComparisonOperator8} from '../model/IdListComparisonOperator8';
import {IdListComparisonOperator9} from '../model/IdListComparisonOperator9';
import {IdToComparisonOperator10} from '../model/IdToComparisonOperator10';
import {IdToComparisonOperator11} from '../model/IdToComparisonOperator11';
import {IdToComparisonOperator8} from '../model/IdToComparisonOperator8';
import {IdToComparisonOperator9} from '../model/IdToComparisonOperator9';
import {IsCustomizableListComparisonOperator} from '../model/IsCustomizableListComparisonOperator';
import {IsCustomizableListComparisonOperator1} from '../model/IsCustomizableListComparisonOperator1';
import {IsCustomizableListComparisonOperator2} from '../model/IsCustomizableListComparisonOperator2';
import {IsCustomizableListComparisonOperator3} from '../model/IsCustomizableListComparisonOperator3';
import {IsCustomizableListComparisonOperator4} from '../model/IsCustomizableListComparisonOperator4';
import {IsCustomizableListComparisonOperator5} from '../model/IsCustomizableListComparisonOperator5';
import {IsCustomizableListComparisonOperator6} from '../model/IsCustomizableListComparisonOperator6';
import {IsCustomizableListComparisonOperator7} from '../model/IsCustomizableListComparisonOperator7';
import {LayoutListComparisonOperator} from '../model/LayoutListComparisonOperator';
import {LayoutListComparisonOperator1} from '../model/LayoutListComparisonOperator1';
import {LayoutListComparisonOperator2} from '../model/LayoutListComparisonOperator2';
import {LayoutListComparisonOperator3} from '../model/LayoutListComparisonOperator3';
import {LayoutListComparisonOperator4} from '../model/LayoutListComparisonOperator4';
import {LayoutListComparisonOperator5} from '../model/LayoutListComparisonOperator5';
import {LayoutListComparisonOperator6} from '../model/LayoutListComparisonOperator6';
import {LayoutListComparisonOperator7} from '../model/LayoutListComparisonOperator7';
import {MatchingPatternInStringBase} from '../model/MatchingPatternInStringBase';
import {NameListComparisonOperator16} from '../model/NameListComparisonOperator16';
import {NameListComparisonOperator17} from '../model/NameListComparisonOperator17';
import {NameListComparisonOperator18} from '../model/NameListComparisonOperator18';
import {NameListComparisonOperator19} from '../model/NameListComparisonOperator19';
import {NameListComparisonOperator20} from '../model/NameListComparisonOperator20';
import {NameListComparisonOperator21} from '../model/NameListComparisonOperator21';
import {NameListComparisonOperator22} from '../model/NameListComparisonOperator22';
import {NameListComparisonOperator23} from '../model/NameListComparisonOperator23';
import {TarotSpreadCreateManyItemListResponseModel} from '../model/TarotSpreadCreateManyItemListResponseModel';
import {TarotSpreadCreateManyItemRequestModel} from '../model/TarotSpreadCreateManyItemRequestModel';
import {TarotSpreadDeleteManyItemListResponseModel} from '../model/TarotSpreadDeleteManyItemListResponseModel';
import {TarotSpreadDeleteOneResponseModel} from '../model/TarotSpreadDeleteOneResponseModel';
import {TarotSpreadFindManyItemListResponseModel} from '../model/TarotSpreadFindManyItemListResponseModel';
import {TarotSpreadFindOneResponseModel} from '../model/TarotSpreadFindOneResponseModel';
import {TarotSpreadPatchManyItemListResponseModel} from '../model/TarotSpreadPatchManyItemListResponseModel';
import {TarotSpreadPatchOneResponseModel} from '../model/TarotSpreadPatchOneResponseModel';
import {TarotSpreadUpdateManyItemListResponseModel} from '../model/TarotSpreadUpdateManyItemListResponseModel';
import {TarotSpreadUpdateOneResponseModel} from '../model/TarotSpreadUpdateOneResponseModel';
import {TotalCardsFromComparisonOperator} from '../model/TotalCardsFromComparisonOperator';
import {TotalCardsFromComparisonOperator1} from '../model/TotalCardsFromComparisonOperator1';
import {TotalCardsFromComparisonOperator2} from '../model/TotalCardsFromComparisonOperator2';
import {TotalCardsFromComparisonOperator3} from '../model/TotalCardsFromComparisonOperator3';
import {TotalCardsFromComparisonOperator4} from '../model/TotalCardsFromComparisonOperator4';
import {TotalCardsFromComparisonOperator5} from '../model/TotalCardsFromComparisonOperator5';
import {TotalCardsFromComparisonOperator6} from '../model/TotalCardsFromComparisonOperator6';
import {TotalCardsFromComparisonOperator7} from '../model/TotalCardsFromComparisonOperator7';
import {TotalCardsListComparisonOperator} from '../model/TotalCardsListComparisonOperator';
import {TotalCardsListComparisonOperator1} from '../model/TotalCardsListComparisonOperator1';
import {TotalCardsListComparisonOperator2} from '../model/TotalCardsListComparisonOperator2';
import {TotalCardsListComparisonOperator3} from '../model/TotalCardsListComparisonOperator3';
import {TotalCardsListComparisonOperator4} from '../model/TotalCardsListComparisonOperator4';
import {TotalCardsListComparisonOperator5} from '../model/TotalCardsListComparisonOperator5';
import {TotalCardsListComparisonOperator6} from '../model/TotalCardsListComparisonOperator6';
import {TotalCardsListComparisonOperator7} from '../model/TotalCardsListComparisonOperator7';
import {TotalCardsToComparisonOperator} from '../model/TotalCardsToComparisonOperator';
import {TotalCardsToComparisonOperator1} from '../model/TotalCardsToComparisonOperator1';
import {TotalCardsToComparisonOperator2} from '../model/TotalCardsToComparisonOperator2';
import {TotalCardsToComparisonOperator3} from '../model/TotalCardsToComparisonOperator3';
import {TotalCardsToComparisonOperator4} from '../model/TotalCardsToComparisonOperator4';
import {TotalCardsToComparisonOperator5} from '../model/TotalCardsToComparisonOperator5';
import {TotalCardsToComparisonOperator6} from '../model/TotalCardsToComparisonOperator6';
import {TotalCardsToComparisonOperator7} from '../model/TotalCardsToComparisonOperator7';
import {UidListComparisonOperator16} from '../model/UidListComparisonOperator16';
import {UidListComparisonOperator17} from '../model/UidListComparisonOperator17';
import {UidListComparisonOperator18} from '../model/UidListComparisonOperator18';
import {UidListComparisonOperator19} from '../model/UidListComparisonOperator19';
import {UidListComparisonOperator20} from '../model/UidListComparisonOperator20';
import {UidListComparisonOperator21} from '../model/UidListComparisonOperator21';
import {UidListComparisonOperator22} from '../model/UidListComparisonOperator22';
import {UidListComparisonOperator23} from '../model/UidListComparisonOperator23';
import {UpdatedFromComparisonOperator16} from '../model/UpdatedFromComparisonOperator16';
import {UpdatedFromComparisonOperator17} from '../model/UpdatedFromComparisonOperator17';
import {UpdatedFromComparisonOperator18} from '../model/UpdatedFromComparisonOperator18';
import {UpdatedFromComparisonOperator19} from '../model/UpdatedFromComparisonOperator19';
import {UpdatedFromComparisonOperator20} from '../model/UpdatedFromComparisonOperator20';
import {UpdatedFromComparisonOperator21} from '../model/UpdatedFromComparisonOperator21';
import {UpdatedFromComparisonOperator22} from '../model/UpdatedFromComparisonOperator22';
import {UpdatedFromComparisonOperator23} from '../model/UpdatedFromComparisonOperator23';
import {UpdatedListComparisonOperator16} from '../model/UpdatedListComparisonOperator16';
import {UpdatedListComparisonOperator17} from '../model/UpdatedListComparisonOperator17';
import {UpdatedListComparisonOperator18} from '../model/UpdatedListComparisonOperator18';
import {UpdatedListComparisonOperator19} from '../model/UpdatedListComparisonOperator19';
import {UpdatedListComparisonOperator20} from '../model/UpdatedListComparisonOperator20';
import {UpdatedListComparisonOperator21} from '../model/UpdatedListComparisonOperator21';
import {UpdatedListComparisonOperator22} from '../model/UpdatedListComparisonOperator22';
import {UpdatedListComparisonOperator23} from '../model/UpdatedListComparisonOperator23';
import {UpdatedToComparisonOperator16} from '../model/UpdatedToComparisonOperator16';
import {UpdatedToComparisonOperator17} from '../model/UpdatedToComparisonOperator17';
import {UpdatedToComparisonOperator18} from '../model/UpdatedToComparisonOperator18';
import {UpdatedToComparisonOperator19} from '../model/UpdatedToComparisonOperator19';
import {UpdatedToComparisonOperator20} from '../model/UpdatedToComparisonOperator20';
import {UpdatedToComparisonOperator21} from '../model/UpdatedToComparisonOperator21';
import {UpdatedToComparisonOperator22} from '../model/UpdatedToComparisonOperator22';
import {UpdatedToComparisonOperator23} from '../model/UpdatedToComparisonOperator23';

/**
* Tarot service.
* @module api/TarotApi
* @version 0.1.0
*/
export class TarotApi {

    /**
    * Constructs a new TarotApi. 
    * @alias module:api/TarotApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the deleteManyByQuerySpreadsDelete operation.
     * @callback moduleapi/TarotApi~deleteManyByQuerySpreadsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotSpreadDeleteManyItemListResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Many By Query
     * @param {Object} opts Optional parameters
     * @param {module:model/IdFromComparisonOperator10} opts.idFromComparisonOperator 
     * @param {module:model/IdToComparisonOperator10} opts.idToComparisonOperator 
     * @param {Number} opts.idFrom 
     * @param {Number} opts.idTo 
     * @param {module:model/IdListComparisonOperator10} opts.idListComparisonOperator 
     * @param {Array.<Number>} opts.idList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator18} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator18} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator18} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator18} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator18} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator18} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator18} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator18} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator18} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/CardsCountFromComparisonOperator2} opts.cardsCountFromComparisonOperator 
     * @param {module:model/CardsCountToComparisonOperator2} opts.cardsCountToComparisonOperator 
     * @param {Number} opts.cardsCountFrom 
     * @param {Number} opts.cardsCountTo 
     * @param {module:model/CardsCountListComparisonOperator2} opts.cardsCountListComparisonOperator 
     * @param {Array.<Number>} opts.cardsCountList 
     * @param {module:model/IsCustomizableListComparisonOperator2} opts.isCustomizableListComparisonOperator 
     * @param {Array.<Boolean>} opts.isCustomizableList 
     * @param {module:model/TotalCardsFromComparisonOperator2} opts.totalCardsFromComparisonOperator 
     * @param {module:model/TotalCardsToComparisonOperator2} opts.totalCardsToComparisonOperator 
     * @param {Number} opts.totalCardsFrom 
     * @param {Number} opts.totalCardsTo 
     * @param {module:model/TotalCardsListComparisonOperator2} opts.totalCardsListComparisonOperator 
     * @param {Array.<Number>} opts.totalCardsList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.layoutStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.layoutStr 
     * @param {module:model/LayoutListComparisonOperator2} opts.layoutListComparisonOperator 
     * @param {Array.<String>} opts.layoutList 
     * @param {module:api/TarotApi~deleteManyByQuerySpreadsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    deleteManyByQuerySpreadsDelete(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'id____from_____comparison_operator': opts['idFromComparisonOperator'],'id____to_____comparison_operator': opts['idToComparisonOperator'],'id____from': opts['idFrom'],'id____to': opts['idTo'],'id____list_____comparison_operator': opts['idListComparisonOperator'],'id____list': this.apiClient.buildCollectionParam(opts['idList'], 'multi'),'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'cards_count____from_____comparison_operator': opts['cardsCountFromComparisonOperator'],'cards_count____to_____comparison_operator': opts['cardsCountToComparisonOperator'],'cards_count____from': opts['cardsCountFrom'],'cards_count____to': opts['cardsCountTo'],'cards_count____list_____comparison_operator': opts['cardsCountListComparisonOperator'],'cards_count____list': this.apiClient.buildCollectionParam(opts['cardsCountList'], 'multi'),'is_customizable____list_____comparison_operator': opts['isCustomizableListComparisonOperator'],'is_customizable____list': this.apiClient.buildCollectionParam(opts['isCustomizableList'], 'multi'),'total_cards____from_____comparison_operator': opts['totalCardsFromComparisonOperator'],'total_cards____to_____comparison_operator': opts['totalCardsToComparisonOperator'],'total_cards____from': opts['totalCardsFrom'],'total_cards____to': opts['totalCardsTo'],'total_cards____list_____comparison_operator': opts['totalCardsListComparisonOperator'],'total_cards____list': this.apiClient.buildCollectionParam(opts['totalCardsList'], 'multi'),'layout____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['layoutStrMatchingPattern'], 'multi'),'layout____str': this.apiClient.buildCollectionParam(opts['layoutStr'], 'multi'),'layout____list_____comparison_operator': opts['layoutListComparisonOperator'],'layout____list': this.apiClient.buildCollectionParam(opts['layoutList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TarotSpreadDeleteManyItemListResponseModel;

      return this.apiClient.callApi(
        '/spreads', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the deleteOneByPrimaryKeySpreadsIdDelete operation.
     * @callback moduleapi/TarotApi~deleteOneByPrimaryKeySpreadsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotSpreadDeleteOneResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete One By Primary Key
     * @param {Number} id 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator22} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator22} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator22} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator22} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator22} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator22} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator22} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator22} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator22} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/CardsCountFromComparisonOperator6} opts.cardsCountFromComparisonOperator 
     * @param {module:model/CardsCountToComparisonOperator6} opts.cardsCountToComparisonOperator 
     * @param {Number} opts.cardsCountFrom 
     * @param {Number} opts.cardsCountTo 
     * @param {module:model/CardsCountListComparisonOperator6} opts.cardsCountListComparisonOperator 
     * @param {Array.<Number>} opts.cardsCountList 
     * @param {module:model/IsCustomizableListComparisonOperator6} opts.isCustomizableListComparisonOperator 
     * @param {Array.<Boolean>} opts.isCustomizableList 
     * @param {module:model/TotalCardsFromComparisonOperator6} opts.totalCardsFromComparisonOperator 
     * @param {module:model/TotalCardsToComparisonOperator6} opts.totalCardsToComparisonOperator 
     * @param {Number} opts.totalCardsFrom 
     * @param {Number} opts.totalCardsTo 
     * @param {module:model/TotalCardsListComparisonOperator6} opts.totalCardsListComparisonOperator 
     * @param {Array.<Number>} opts.totalCardsList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.layoutStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.layoutStr 
     * @param {module:model/LayoutListComparisonOperator6} opts.layoutListComparisonOperator 
     * @param {Array.<String>} opts.layoutList 
     * @param {module:api/TarotApi~deleteOneByPrimaryKeySpreadsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    deleteOneByPrimaryKeySpreadsIdDelete(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteOneByPrimaryKeySpreadsIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'cards_count____from_____comparison_operator': opts['cardsCountFromComparisonOperator'],'cards_count____to_____comparison_operator': opts['cardsCountToComparisonOperator'],'cards_count____from': opts['cardsCountFrom'],'cards_count____to': opts['cardsCountTo'],'cards_count____list_____comparison_operator': opts['cardsCountListComparisonOperator'],'cards_count____list': this.apiClient.buildCollectionParam(opts['cardsCountList'], 'multi'),'is_customizable____list_____comparison_operator': opts['isCustomizableListComparisonOperator'],'is_customizable____list': this.apiClient.buildCollectionParam(opts['isCustomizableList'], 'multi'),'total_cards____from_____comparison_operator': opts['totalCardsFromComparisonOperator'],'total_cards____to_____comparison_operator': opts['totalCardsToComparisonOperator'],'total_cards____from': opts['totalCardsFrom'],'total_cards____to': opts['totalCardsTo'],'total_cards____list_____comparison_operator': opts['totalCardsListComparisonOperator'],'total_cards____list': this.apiClient.buildCollectionParam(opts['totalCardsList'], 'multi'),'layout____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['layoutStrMatchingPattern'], 'multi'),'layout____str': this.apiClient.buildCollectionParam(opts['layoutStr'], 'multi'),'layout____list_____comparison_operator': opts['layoutListComparisonOperator'],'layout____list': this.apiClient.buildCollectionParam(opts['layoutList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TarotSpreadDeleteOneResponseModel;

      return this.apiClient.callApi(
        '/spreads/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the entireUpdateByPrimaryKeySpreadsIdPut operation.
     * @callback moduleapi/TarotApi~entireUpdateByPrimaryKeySpreadsIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotSpreadUpdateOneResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Entire Update By Primary Key
     * @param {module:model/BodyEntireUpdateByPrimaryKeySpreadsIdPut} body 
     * @param {Number} id 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator21} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator21} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator21} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator21} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator21} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator21} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator21} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator21} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator21} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/CardsCountFromComparisonOperator5} opts.cardsCountFromComparisonOperator 
     * @param {module:model/CardsCountToComparisonOperator5} opts.cardsCountToComparisonOperator 
     * @param {Number} opts.cardsCountFrom 
     * @param {Number} opts.cardsCountTo 
     * @param {module:model/CardsCountListComparisonOperator5} opts.cardsCountListComparisonOperator 
     * @param {Array.<Number>} opts.cardsCountList 
     * @param {module:model/IsCustomizableListComparisonOperator5} opts.isCustomizableListComparisonOperator 
     * @param {Array.<Boolean>} opts.isCustomizableList 
     * @param {module:model/TotalCardsFromComparisonOperator5} opts.totalCardsFromComparisonOperator 
     * @param {module:model/TotalCardsToComparisonOperator5} opts.totalCardsToComparisonOperator 
     * @param {Number} opts.totalCardsFrom 
     * @param {Number} opts.totalCardsTo 
     * @param {module:model/TotalCardsListComparisonOperator5} opts.totalCardsListComparisonOperator 
     * @param {Array.<Number>} opts.totalCardsList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.layoutStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.layoutStr 
     * @param {module:model/LayoutListComparisonOperator5} opts.layoutListComparisonOperator 
     * @param {Array.<String>} opts.layoutList 
     * @param {module:api/TarotApi~entireUpdateByPrimaryKeySpreadsIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    entireUpdateByPrimaryKeySpreadsIdPut(body, id, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling entireUpdateByPrimaryKeySpreadsIdPut");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling entireUpdateByPrimaryKeySpreadsIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'cards_count____from_____comparison_operator': opts['cardsCountFromComparisonOperator'],'cards_count____to_____comparison_operator': opts['cardsCountToComparisonOperator'],'cards_count____from': opts['cardsCountFrom'],'cards_count____to': opts['cardsCountTo'],'cards_count____list_____comparison_operator': opts['cardsCountListComparisonOperator'],'cards_count____list': this.apiClient.buildCollectionParam(opts['cardsCountList'], 'multi'),'is_customizable____list_____comparison_operator': opts['isCustomizableListComparisonOperator'],'is_customizable____list': this.apiClient.buildCollectionParam(opts['isCustomizableList'], 'multi'),'total_cards____from_____comparison_operator': opts['totalCardsFromComparisonOperator'],'total_cards____to_____comparison_operator': opts['totalCardsToComparisonOperator'],'total_cards____from': opts['totalCardsFrom'],'total_cards____to': opts['totalCardsTo'],'total_cards____list_____comparison_operator': opts['totalCardsListComparisonOperator'],'total_cards____list': this.apiClient.buildCollectionParam(opts['totalCardsList'], 'multi'),'layout____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['layoutStrMatchingPattern'], 'multi'),'layout____str': this.apiClient.buildCollectionParam(opts['layoutStr'], 'multi'),'layout____list_____comparison_operator': opts['layoutListComparisonOperator'],'layout____list': this.apiClient.buildCollectionParam(opts['layoutList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TarotSpreadUpdateOneResponseModel;

      return this.apiClient.callApi(
        '/spreads/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the entireUpdateManyByQuerySpreadsPut operation.
     * @callback moduleapi/TarotApi~entireUpdateManyByQuerySpreadsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotSpreadUpdateManyItemListResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Entire Update Many By Query
     * @param {module:model/BodyEntireUpdateManyByQuerySpreadsPut} body 
     * @param {Object} opts Optional parameters
     * @param {module:model/IdFromComparisonOperator9} opts.idFromComparisonOperator 
     * @param {module:model/IdToComparisonOperator9} opts.idToComparisonOperator 
     * @param {Number} opts.idFrom 
     * @param {Number} opts.idTo 
     * @param {module:model/IdListComparisonOperator9} opts.idListComparisonOperator 
     * @param {Array.<Number>} opts.idList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator17} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator17} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator17} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator17} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator17} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator17} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator17} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator17} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator17} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/CardsCountFromComparisonOperator1} opts.cardsCountFromComparisonOperator 
     * @param {module:model/CardsCountToComparisonOperator1} opts.cardsCountToComparisonOperator 
     * @param {Number} opts.cardsCountFrom 
     * @param {Number} opts.cardsCountTo 
     * @param {module:model/CardsCountListComparisonOperator1} opts.cardsCountListComparisonOperator 
     * @param {Array.<Number>} opts.cardsCountList 
     * @param {module:model/IsCustomizableListComparisonOperator1} opts.isCustomizableListComparisonOperator 
     * @param {Array.<Boolean>} opts.isCustomizableList 
     * @param {module:model/TotalCardsFromComparisonOperator1} opts.totalCardsFromComparisonOperator 
     * @param {module:model/TotalCardsToComparisonOperator1} opts.totalCardsToComparisonOperator 
     * @param {Number} opts.totalCardsFrom 
     * @param {Number} opts.totalCardsTo 
     * @param {module:model/TotalCardsListComparisonOperator1} opts.totalCardsListComparisonOperator 
     * @param {Array.<Number>} opts.totalCardsList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.layoutStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.layoutStr 
     * @param {module:model/LayoutListComparisonOperator1} opts.layoutListComparisonOperator 
     * @param {Array.<String>} opts.layoutList 
     * @param {module:api/TarotApi~entireUpdateManyByQuerySpreadsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    entireUpdateManyByQuerySpreadsPut(body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling entireUpdateManyByQuerySpreadsPut");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'id____from_____comparison_operator': opts['idFromComparisonOperator'],'id____to_____comparison_operator': opts['idToComparisonOperator'],'id____from': opts['idFrom'],'id____to': opts['idTo'],'id____list_____comparison_operator': opts['idListComparisonOperator'],'id____list': this.apiClient.buildCollectionParam(opts['idList'], 'multi'),'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'cards_count____from_____comparison_operator': opts['cardsCountFromComparisonOperator'],'cards_count____to_____comparison_operator': opts['cardsCountToComparisonOperator'],'cards_count____from': opts['cardsCountFrom'],'cards_count____to': opts['cardsCountTo'],'cards_count____list_____comparison_operator': opts['cardsCountListComparisonOperator'],'cards_count____list': this.apiClient.buildCollectionParam(opts['cardsCountList'], 'multi'),'is_customizable____list_____comparison_operator': opts['isCustomizableListComparisonOperator'],'is_customizable____list': this.apiClient.buildCollectionParam(opts['isCustomizableList'], 'multi'),'total_cards____from_____comparison_operator': opts['totalCardsFromComparisonOperator'],'total_cards____to_____comparison_operator': opts['totalCardsToComparisonOperator'],'total_cards____from': opts['totalCardsFrom'],'total_cards____to': opts['totalCardsTo'],'total_cards____list_____comparison_operator': opts['totalCardsListComparisonOperator'],'total_cards____list': this.apiClient.buildCollectionParam(opts['totalCardsList'], 'multi'),'layout____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['layoutStrMatchingPattern'], 'multi'),'layout____str': this.apiClient.buildCollectionParam(opts['layoutStr'], 'multi'),'layout____list_____comparison_operator': opts['layoutListComparisonOperator'],'layout____list': this.apiClient.buildCollectionParam(opts['layoutList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TarotSpreadUpdateManyItemListResponseModel;

      return this.apiClient.callApi(
        '/spreads', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getManySpreadsGet operation.
     * @callback moduleapi/TarotApi~getManySpreadsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotSpreadFindManyItemListResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Many
     * @param {Object} opts Optional parameters
     * @param {module:model/IdFromComparisonOperator8} opts.idFromComparisonOperator 
     * @param {module:model/IdToComparisonOperator8} opts.idToComparisonOperator 
     * @param {Number} opts.idFrom 
     * @param {Number} opts.idTo 
     * @param {module:model/IdListComparisonOperator8} opts.idListComparisonOperator 
     * @param {Array.<Number>} opts.idList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator16} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator16} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator16} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator16} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator16} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator16} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator16} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator16} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator16} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/CardsCountFromComparisonOperator} opts.cardsCountFromComparisonOperator 
     * @param {module:model/CardsCountToComparisonOperator} opts.cardsCountToComparisonOperator 
     * @param {Number} opts.cardsCountFrom 
     * @param {Number} opts.cardsCountTo 
     * @param {module:model/CardsCountListComparisonOperator} opts.cardsCountListComparisonOperator 
     * @param {Array.<Number>} opts.cardsCountList 
     * @param {module:model/IsCustomizableListComparisonOperator} opts.isCustomizableListComparisonOperator 
     * @param {Array.<Boolean>} opts.isCustomizableList 
     * @param {module:model/TotalCardsFromComparisonOperator} opts.totalCardsFromComparisonOperator 
     * @param {module:model/TotalCardsToComparisonOperator} opts.totalCardsToComparisonOperator 
     * @param {Number} opts.totalCardsFrom 
     * @param {Number} opts.totalCardsTo 
     * @param {module:model/TotalCardsListComparisonOperator} opts.totalCardsListComparisonOperator 
     * @param {Array.<Number>} opts.totalCardsList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.layoutStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.layoutStr 
     * @param {module:model/LayoutListComparisonOperator} opts.layoutListComparisonOperator 
     * @param {Array.<String>} opts.layoutList 
     * @param {Number} opts.limit 
     * @param {Number} opts.offset 
     * @param {Array.<String>} opts.orderByColumns &lt;br&gt; support column:              &lt;br&gt; [&#x27;id&#x27;, &#x27;uid&#x27;, &#x27;name&#x27;, &#x27;description&#x27;, &#x27;created&#x27;, &#x27;updated&#x27;, &#x27;cards_count&#x27;, &#x27;is_customizable&#x27;, &#x27;total_cards&#x27;, &#x27;layout&#x27;] &lt;hr&gt;&lt;br&gt; support ordering:               &lt;br&gt; [&#x27;DESC&#x27;, &#x27;ASC&#x27;]              &lt;hr&gt;              &lt;br/&gt;example:              &lt;br/&gt;&amp;emsp;&amp;emsp;any name of column:ASC             &lt;br/&gt;&amp;emsp;&amp;emsp;any name of column: DESC              &lt;br/&gt;&amp;emsp;&amp;emsp;any name of column    :    DESC             &lt;br/&gt;&amp;emsp;&amp;emsp;any name of column (default sort by ASC)
     * @param {module:api/TarotApi~getManySpreadsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getManySpreadsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'id____from_____comparison_operator': opts['idFromComparisonOperator'],'id____to_____comparison_operator': opts['idToComparisonOperator'],'id____from': opts['idFrom'],'id____to': opts['idTo'],'id____list_____comparison_operator': opts['idListComparisonOperator'],'id____list': this.apiClient.buildCollectionParam(opts['idList'], 'multi'),'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'cards_count____from_____comparison_operator': opts['cardsCountFromComparisonOperator'],'cards_count____to_____comparison_operator': opts['cardsCountToComparisonOperator'],'cards_count____from': opts['cardsCountFrom'],'cards_count____to': opts['cardsCountTo'],'cards_count____list_____comparison_operator': opts['cardsCountListComparisonOperator'],'cards_count____list': this.apiClient.buildCollectionParam(opts['cardsCountList'], 'multi'),'is_customizable____list_____comparison_operator': opts['isCustomizableListComparisonOperator'],'is_customizable____list': this.apiClient.buildCollectionParam(opts['isCustomizableList'], 'multi'),'total_cards____from_____comparison_operator': opts['totalCardsFromComparisonOperator'],'total_cards____to_____comparison_operator': opts['totalCardsToComparisonOperator'],'total_cards____from': opts['totalCardsFrom'],'total_cards____to': opts['totalCardsTo'],'total_cards____list_____comparison_operator': opts['totalCardsListComparisonOperator'],'total_cards____list': this.apiClient.buildCollectionParam(opts['totalCardsList'], 'multi'),'layout____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['layoutStrMatchingPattern'], 'multi'),'layout____str': this.apiClient.buildCollectionParam(opts['layoutStr'], 'multi'),'layout____list_____comparison_operator': opts['layoutListComparisonOperator'],'layout____list': this.apiClient.buildCollectionParam(opts['layoutList'], 'multi'),'limit': opts['limit'],'offset': opts['offset'],'order_by_columns': this.apiClient.buildCollectionParam(opts['orderByColumns'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TarotSpreadFindManyItemListResponseModel;

      return this.apiClient.callApi(
        '/spreads', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getOneByPrimaryKeySpreadsIdGet operation.
     * @callback moduleapi/TarotApi~getOneByPrimaryKeySpreadsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotSpreadFindOneResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get One By Primary Key
     * @param {Number} id 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator20} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator20} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator20} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator20} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator20} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator20} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator20} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator20} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator20} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/CardsCountFromComparisonOperator4} opts.cardsCountFromComparisonOperator 
     * @param {module:model/CardsCountToComparisonOperator4} opts.cardsCountToComparisonOperator 
     * @param {Number} opts.cardsCountFrom 
     * @param {Number} opts.cardsCountTo 
     * @param {module:model/CardsCountListComparisonOperator4} opts.cardsCountListComparisonOperator 
     * @param {Array.<Number>} opts.cardsCountList 
     * @param {module:model/IsCustomizableListComparisonOperator4} opts.isCustomizableListComparisonOperator 
     * @param {Array.<Boolean>} opts.isCustomizableList 
     * @param {module:model/TotalCardsFromComparisonOperator4} opts.totalCardsFromComparisonOperator 
     * @param {module:model/TotalCardsToComparisonOperator4} opts.totalCardsToComparisonOperator 
     * @param {Number} opts.totalCardsFrom 
     * @param {Number} opts.totalCardsTo 
     * @param {module:model/TotalCardsListComparisonOperator4} opts.totalCardsListComparisonOperator 
     * @param {Array.<Number>} opts.totalCardsList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.layoutStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.layoutStr 
     * @param {module:model/LayoutListComparisonOperator4} opts.layoutListComparisonOperator 
     * @param {Array.<String>} opts.layoutList 
     * @param {module:api/TarotApi~getOneByPrimaryKeySpreadsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getOneByPrimaryKeySpreadsIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getOneByPrimaryKeySpreadsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'cards_count____from_____comparison_operator': opts['cardsCountFromComparisonOperator'],'cards_count____to_____comparison_operator': opts['cardsCountToComparisonOperator'],'cards_count____from': opts['cardsCountFrom'],'cards_count____to': opts['cardsCountTo'],'cards_count____list_____comparison_operator': opts['cardsCountListComparisonOperator'],'cards_count____list': this.apiClient.buildCollectionParam(opts['cardsCountList'], 'multi'),'is_customizable____list_____comparison_operator': opts['isCustomizableListComparisonOperator'],'is_customizable____list': this.apiClient.buildCollectionParam(opts['isCustomizableList'], 'multi'),'total_cards____from_____comparison_operator': opts['totalCardsFromComparisonOperator'],'total_cards____to_____comparison_operator': opts['totalCardsToComparisonOperator'],'total_cards____from': opts['totalCardsFrom'],'total_cards____to': opts['totalCardsTo'],'total_cards____list_____comparison_operator': opts['totalCardsListComparisonOperator'],'total_cards____list': this.apiClient.buildCollectionParam(opts['totalCardsList'], 'multi'),'layout____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['layoutStrMatchingPattern'], 'multi'),'layout____str': this.apiClient.buildCollectionParam(opts['layoutStr'], 'multi'),'layout____list_____comparison_operator': opts['layoutListComparisonOperator'],'layout____list': this.apiClient.buildCollectionParam(opts['layoutList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TarotSpreadFindOneResponseModel;

      return this.apiClient.callApi(
        '/spreads/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the insertManySpreadsPost operation.
     * @callback moduleapi/TarotApi~insertManySpreadsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotSpreadCreateManyItemListResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Insert Many
     * @param {Array.<module:model/TarotSpreadCreateManyItemRequestModel>} body 
     * @param {module:api/TarotApi~insertManySpreadsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    insertManySpreadsPost(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling insertManySpreadsPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TarotSpreadCreateManyItemListResponseModel;

      return this.apiClient.callApi(
        '/spreads', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the partialUpdateManyByQuerySpreadsPatch operation.
     * @callback moduleapi/TarotApi~partialUpdateManyByQuerySpreadsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotSpreadPatchManyItemListResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Partial Update Many By Query
     * @param {Object} opts Optional parameters
     * @param {module:model/BodyPartialUpdateManyByQuerySpreadsPatch} opts.body 
     * @param {module:model/IdFromComparisonOperator11} opts.idFromComparisonOperator 
     * @param {module:model/IdToComparisonOperator11} opts.idToComparisonOperator 
     * @param {Number} opts.idFrom 
     * @param {Number} opts.idTo 
     * @param {module:model/IdListComparisonOperator11} opts.idListComparisonOperator 
     * @param {Array.<Number>} opts.idList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator19} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator19} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator19} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator19} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator19} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator19} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator19} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator19} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator19} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/CardsCountFromComparisonOperator3} opts.cardsCountFromComparisonOperator 
     * @param {module:model/CardsCountToComparisonOperator3} opts.cardsCountToComparisonOperator 
     * @param {Number} opts.cardsCountFrom 
     * @param {Number} opts.cardsCountTo 
     * @param {module:model/CardsCountListComparisonOperator3} opts.cardsCountListComparisonOperator 
     * @param {Array.<Number>} opts.cardsCountList 
     * @param {module:model/IsCustomizableListComparisonOperator3} opts.isCustomizableListComparisonOperator 
     * @param {Array.<Boolean>} opts.isCustomizableList 
     * @param {module:model/TotalCardsFromComparisonOperator3} opts.totalCardsFromComparisonOperator 
     * @param {module:model/TotalCardsToComparisonOperator3} opts.totalCardsToComparisonOperator 
     * @param {Number} opts.totalCardsFrom 
     * @param {Number} opts.totalCardsTo 
     * @param {module:model/TotalCardsListComparisonOperator3} opts.totalCardsListComparisonOperator 
     * @param {Array.<Number>} opts.totalCardsList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.layoutStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.layoutStr 
     * @param {module:model/LayoutListComparisonOperator3} opts.layoutListComparisonOperator 
     * @param {Array.<String>} opts.layoutList 
     * @param {module:api/TarotApi~partialUpdateManyByQuerySpreadsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    partialUpdateManyByQuerySpreadsPatch(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        'id____from_____comparison_operator': opts['idFromComparisonOperator'],'id____to_____comparison_operator': opts['idToComparisonOperator'],'id____from': opts['idFrom'],'id____to': opts['idTo'],'id____list_____comparison_operator': opts['idListComparisonOperator'],'id____list': this.apiClient.buildCollectionParam(opts['idList'], 'multi'),'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'cards_count____from_____comparison_operator': opts['cardsCountFromComparisonOperator'],'cards_count____to_____comparison_operator': opts['cardsCountToComparisonOperator'],'cards_count____from': opts['cardsCountFrom'],'cards_count____to': opts['cardsCountTo'],'cards_count____list_____comparison_operator': opts['cardsCountListComparisonOperator'],'cards_count____list': this.apiClient.buildCollectionParam(opts['cardsCountList'], 'multi'),'is_customizable____list_____comparison_operator': opts['isCustomizableListComparisonOperator'],'is_customizable____list': this.apiClient.buildCollectionParam(opts['isCustomizableList'], 'multi'),'total_cards____from_____comparison_operator': opts['totalCardsFromComparisonOperator'],'total_cards____to_____comparison_operator': opts['totalCardsToComparisonOperator'],'total_cards____from': opts['totalCardsFrom'],'total_cards____to': opts['totalCardsTo'],'total_cards____list_____comparison_operator': opts['totalCardsListComparisonOperator'],'total_cards____list': this.apiClient.buildCollectionParam(opts['totalCardsList'], 'multi'),'layout____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['layoutStrMatchingPattern'], 'multi'),'layout____str': this.apiClient.buildCollectionParam(opts['layoutStr'], 'multi'),'layout____list_____comparison_operator': opts['layoutListComparisonOperator'],'layout____list': this.apiClient.buildCollectionParam(opts['layoutList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TarotSpreadPatchManyItemListResponseModel;

      return this.apiClient.callApi(
        '/spreads', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the partialUpdateOneByPrimaryKeySpreadsIdPatch operation.
     * @callback moduleapi/TarotApi~partialUpdateOneByPrimaryKeySpreadsIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TarotSpreadPatchOneResponseModel{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Partial Update One By Primary Key
     * @param {Number} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/BodyPartialUpdateOneByPrimaryKeySpreadsIdPatch} opts.body 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.uidStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.uidStr 
     * @param {module:model/UidListComparisonOperator23} opts.uidListComparisonOperator 
     * @param {Array.<String>} opts.uidList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.nameStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.nameStr 
     * @param {module:model/NameListComparisonOperator23} opts.nameListComparisonOperator 
     * @param {Array.<String>} opts.nameList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.descriptionStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.descriptionStr 
     * @param {module:model/DescriptionListComparisonOperator23} opts.descriptionListComparisonOperator 
     * @param {Array.<String>} opts.descriptionList 
     * @param {module:model/CreatedFromComparisonOperator23} opts.createdFromComparisonOperator 
     * @param {module:model/CreatedToComparisonOperator23} opts.createdToComparisonOperator 
     * @param {Date} opts.createdFrom 
     * @param {Date} opts.createdTo 
     * @param {module:model/CreatedListComparisonOperator23} opts.createdListComparisonOperator 
     * @param {Array.<Date>} opts.createdList 
     * @param {module:model/UpdatedFromComparisonOperator23} opts.updatedFromComparisonOperator 
     * @param {module:model/UpdatedToComparisonOperator23} opts.updatedToComparisonOperator 
     * @param {Date} opts.updatedFrom 
     * @param {Date} opts.updatedTo 
     * @param {module:model/UpdatedListComparisonOperator23} opts.updatedListComparisonOperator 
     * @param {Array.<Date>} opts.updatedList 
     * @param {module:model/CardsCountFromComparisonOperator7} opts.cardsCountFromComparisonOperator 
     * @param {module:model/CardsCountToComparisonOperator7} opts.cardsCountToComparisonOperator 
     * @param {Number} opts.cardsCountFrom 
     * @param {Number} opts.cardsCountTo 
     * @param {module:model/CardsCountListComparisonOperator7} opts.cardsCountListComparisonOperator 
     * @param {Array.<Number>} opts.cardsCountList 
     * @param {module:model/IsCustomizableListComparisonOperator7} opts.isCustomizableListComparisonOperator 
     * @param {Array.<Boolean>} opts.isCustomizableList 
     * @param {module:model/TotalCardsFromComparisonOperator7} opts.totalCardsFromComparisonOperator 
     * @param {module:model/TotalCardsToComparisonOperator7} opts.totalCardsToComparisonOperator 
     * @param {Number} opts.totalCardsFrom 
     * @param {Number} opts.totalCardsTo 
     * @param {module:model/TotalCardsListComparisonOperator7} opts.totalCardsListComparisonOperator 
     * @param {Array.<Number>} opts.totalCardsList 
     * @param {Array.<module:model/MatchingPatternInStringBase>} opts.layoutStrMatchingPattern  (default to <.>)
     * @param {Array.<String>} opts.layoutStr 
     * @param {module:model/LayoutListComparisonOperator7} opts.layoutListComparisonOperator 
     * @param {Array.<String>} opts.layoutList 
     * @param {module:api/TarotApi~partialUpdateOneByPrimaryKeySpreadsIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    partialUpdateOneByPrimaryKeySpreadsIdPatch(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling partialUpdateOneByPrimaryKeySpreadsIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'uid____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['uidStrMatchingPattern'], 'multi'),'uid____str': this.apiClient.buildCollectionParam(opts['uidStr'], 'multi'),'uid____list_____comparison_operator': opts['uidListComparisonOperator'],'uid____list': this.apiClient.buildCollectionParam(opts['uidList'], 'multi'),'name____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['nameStrMatchingPattern'], 'multi'),'name____str': this.apiClient.buildCollectionParam(opts['nameStr'], 'multi'),'name____list_____comparison_operator': opts['nameListComparisonOperator'],'name____list': this.apiClient.buildCollectionParam(opts['nameList'], 'multi'),'description____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['descriptionStrMatchingPattern'], 'multi'),'description____str': this.apiClient.buildCollectionParam(opts['descriptionStr'], 'multi'),'description____list_____comparison_operator': opts['descriptionListComparisonOperator'],'description____list': this.apiClient.buildCollectionParam(opts['descriptionList'], 'multi'),'created____from_____comparison_operator': opts['createdFromComparisonOperator'],'created____to_____comparison_operator': opts['createdToComparisonOperator'],'created____from': opts['createdFrom'],'created____to': opts['createdTo'],'created____list_____comparison_operator': opts['createdListComparisonOperator'],'created____list': this.apiClient.buildCollectionParam(opts['createdList'], 'multi'),'updated____from_____comparison_operator': opts['updatedFromComparisonOperator'],'updated____to_____comparison_operator': opts['updatedToComparisonOperator'],'updated____from': opts['updatedFrom'],'updated____to': opts['updatedTo'],'updated____list_____comparison_operator': opts['updatedListComparisonOperator'],'updated____list': this.apiClient.buildCollectionParam(opts['updatedList'], 'multi'),'cards_count____from_____comparison_operator': opts['cardsCountFromComparisonOperator'],'cards_count____to_____comparison_operator': opts['cardsCountToComparisonOperator'],'cards_count____from': opts['cardsCountFrom'],'cards_count____to': opts['cardsCountTo'],'cards_count____list_____comparison_operator': opts['cardsCountListComparisonOperator'],'cards_count____list': this.apiClient.buildCollectionParam(opts['cardsCountList'], 'multi'),'is_customizable____list_____comparison_operator': opts['isCustomizableListComparisonOperator'],'is_customizable____list': this.apiClient.buildCollectionParam(opts['isCustomizableList'], 'multi'),'total_cards____from_____comparison_operator': opts['totalCardsFromComparisonOperator'],'total_cards____to_____comparison_operator': opts['totalCardsToComparisonOperator'],'total_cards____from': opts['totalCardsFrom'],'total_cards____to': opts['totalCardsTo'],'total_cards____list_____comparison_operator': opts['totalCardsListComparisonOperator'],'total_cards____list': this.apiClient.buildCollectionParam(opts['totalCardsList'], 'multi'),'layout____str_____matching_pattern': this.apiClient.buildCollectionParam(opts['layoutStrMatchingPattern'], 'multi'),'layout____str': this.apiClient.buildCollectionParam(opts['layoutStr'], 'multi'),'layout____list_____comparison_operator': opts['layoutListComparisonOperator'],'layout____list': this.apiClient.buildCollectionParam(opts['layoutList'], 'multi')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TarotSpreadPatchOneResponseModel;

      return this.apiClient.callApi(
        '/spreads/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}